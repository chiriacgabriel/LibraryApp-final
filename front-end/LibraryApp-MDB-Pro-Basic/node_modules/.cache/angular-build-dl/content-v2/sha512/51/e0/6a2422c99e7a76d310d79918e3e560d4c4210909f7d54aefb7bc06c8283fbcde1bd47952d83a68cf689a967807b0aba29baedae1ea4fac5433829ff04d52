{"version":3,"sources":["./src/app/model/AuthorImageUrl.ts","./src/app/model/Author.ts","./src/app/_services/client.service.ts","./src/app/_services/profile.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/_services/book.service.ts","./src/app/_services/reload-page.service.ts","./src/app/_core/client/client.component.ts","./src/app/_core/client/client.component.html","./src/app/_errors/not-found/not-found.component.ts","./src/app/_errors/not-found/not-found.component.html","./src/app/_services/auth.service.ts","./src/app/_core/book/book.component.ts","./src/app/_core/book/book.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_core/author/author-details/author-details.component.ts","./src/app/_core/author/author-details/author-details.component.html","./src/app/_services/role.service.ts","./src/app/_services/token-storage.service.ts","./src/app/_core/media/media.component.ts","./src/app/_core/media/media.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashboard/stats-card/stats-card.component.ts","./src/app/dashboard/stats-card/stats-card.component.html","./src/app/_services/user.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/_services/alerts.service.ts","./src/app/app.module.ts","./src/app/_services/book-image-url.service.ts","./src/app/_core/reservation/reservation.component.ts","./src/app/_core/reservation/reservation.component.html","./src/app/_core/author/author.component.ts","./src/app/_core/author/author.component.html","./src/app/_services/author-image-url.service.ts","./src/app/_services/reservation-state.service.ts","./src/app/_services/reservation.service.ts","./src/app/_services/author.service.ts","./src/app/_services/book-category-type.service.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/_services/stats.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Author} from './Author';\r\n\r\nexport class AuthorImageUrl {\r\n  id: number;\r\n  title: string;\r\n  imageUrl: any;\r\n}\r\n","import {Book} from './Book';\r\nimport {AuthorImageUrl} from './AuthorImageUrl';\r\n\r\nexport class Author{\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  dateOfBirth: string;\r\n  nationality: string;\r\n  description: string;\r\n  type: string;\r\n  authorImageUrl: AuthorImageUrl;\r\n  bookSet: Book[];\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Client} from '../model/Client';\r\n\r\nconst API_URL = 'http://localhost:8080/api/clients/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllClients(): Observable<Client>{\r\n    return this.http.get<Client>(API_URL);\r\n  }\r\n\r\n  addClient(client: Client): Observable<Client>{\r\n    return this.http.post<Client>(API_URL,{\r\n      firstName: client.firstName,\r\n      lastName: client.lastName,\r\n      email: client.email,\r\n      phoneNumber: client.phoneNumber\r\n    }, httpOptions);\r\n  }\r\n\r\n  editClientById(id: number, client: Client): Observable<Client>{\r\n    return this.http.put<Client>(API_URL + id,{\r\n      firstName: client.firstName,\r\n      lastName: client.lastName,\r\n      email: client.email,\r\n      phoneNumber: client.phoneNumber\r\n    },httpOptions);\r\n  }\r\n\r\n  getClientById(id: number){\r\n    return this.http.get<Client>(API_URL + id);\r\n  }\r\n\r\n  deleteClientById(id: number): Observable<Client> {\r\n    return this.http.delete<Client>(API_URL + id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {User} from '../model/User';\n\nconst API_URL = 'http://localhost:8080/api/users/';\nconst API_URL_PROFILE_IMAGE = 'http://localhost:8080/api/profile-image/';\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  updateProfileImage(file: File, id: number): Observable<any> {\n    const formData: FormData = new FormData();\n    formData.append('file', file);\n\n\n    const req = new HttpRequest('PUT', API_URL_PROFILE_IMAGE + id, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n\n    return this.http.request(req);\n  }\n\n  getProfileImageByUserId(id: number) {\n    return this.http.get(API_URL_PROFILE_IMAGE + id);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../_services/auth.service';\r\nimport {MDBModalRef, MDBModalService} from 'ng-uikit-pro-standard';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {LoginComponent} from '../login/login.component';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    form: any = {};\r\n    isSuccessful = false;\r\n    isSignUpFailed = false;\r\n    errorMessage = '';\r\n\r\n    validatingForm: FormGroup;\r\n\r\n    constructor(private authService: AuthService,\r\n                public modalRefRegister: MDBModalRef,\r\n                private modalService: MDBModalService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validatingForm = new FormGroup({\r\n            modalFormElegantEmail: new FormControl('', Validators.email),\r\n            modalFormElegantPassword: new FormControl('', Validators.required),\r\n            modalFormElegantName: new FormControl('', Validators.required),\r\n            modalFormElegantLastName: new FormControl('', Validators.required)\r\n        });\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.authService.register(this.form).subscribe(\r\n            data => {\r\n                this.isSuccessful = true;\r\n                this.isSignUpFailed = false;\r\n                this.modalRefRegister.hide();\r\n                this.modalService.show(LoginComponent);\r\n\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isSignUpFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    get modalFormElegantEmail() {\r\n        return this.validatingForm.get('modalFormElegantEmail');\r\n    }\r\n\r\n    get modalFormElegantPassword() {\r\n        return this.validatingForm.get('modalFormElegantPassword');\r\n    }\r\n\r\n    get modalFormElegantLastName() {\r\n        return this.validatingForm.get('modalFormElegantLastName');\r\n    }\r\n\r\n    get modalFormElegantName() {\r\n        return this.validatingForm.get('modalFormElegantName');\r\n    }\r\n}\r\n","\r\n<!--Content-->\r\n<div class=\"modal-content form-elegant\">\r\n  <!--Header-->\r\n  <div class=\"modal-header text-center\">\r\n    <h3 class=\"modal-title w-100 dark-grey-text font-weight-bold my-3\" id=\"myModalLabel\">\r\n      <strong>Register</strong>\r\n    </h3>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n            (click)=\"modalRefRegister.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <!--Body-->\r\n  <form *ngIf=\"!isSuccessful\"\r\n  name=\"form\"\r\n  (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n  #f=\"ngForm\"\r\n  novalidate>\r\n\r\n  <div class=\"modal-body mx-4\">\r\n    <!--Body-->\r\n\r\n    <div class=\"md-form mb-5\">\r\n      <input type=\"text\" id=\"Form-name\" class=\"form-control\"\r\n             name=\"name\"\r\n             [(ngModel)]=\"form.name\"\r\n             mdbInput\r\n             mdbValidate\r\n             [formControl]=\"modalFormElegantName\">\r\n      <label for=\"Form-name\">Name</label>\r\n      <mdb-error\r\n              *ngIf=\"modalFormElegantName.invalid && (modalFormElegantName.dirty || modalFormElegantName.touched)\">\r\n        Input invalid\r\n      </mdb-error>\r\n      <mdb-success\r\n              *ngIf=\"modalFormElegantName.valid && (modalFormElegantName.dirty || modalFormElegantName.touched)\">Input\r\n        valid\r\n      </mdb-success>\r\n    </div>\r\n\r\n    <div class=\"md-form mb-5\">\r\n      <input type=\"text\" id=\"Form-lastName\" class=\"form-control\"\r\n             name=\"lastname\"\r\n             [(ngModel)]=\"form.lastName\"\r\n             mdbInput\r\n             mdbValidate\r\n             [formControl]=\"modalFormElegantLastName\">\r\n      <label for=\"Form-lastName\">Last Name</label>\r\n      <mdb-error\r\n        *ngIf=\"modalFormElegantLastName.invalid && (modalFormElegantLastName.dirty || modalFormElegantLastName.touched)\">\r\n        Input invalid\r\n      </mdb-error>\r\n      <mdb-success\r\n        *ngIf=\"modalFormElegantLastName.valid && (modalFormElegantLastName.dirty || modalFormElegantLastName.touched)\">Input\r\n        valid\r\n      </mdb-success>\r\n    </div>\r\n\r\n    <div class=\"md-form mb-5\">\r\n      <input type=\"email\" id=\"Form-email1\" class=\"form-control\"\r\n             name=\"email\"\r\n             [(ngModel)]=\"form.email\"\r\n             mdbInput\r\n             mdbValidate\r\n             [formControl]=\"modalFormElegantEmail\">\r\n      <label for=\"Form-email1\">Your email</label>\r\n      <mdb-error\r\n        *ngIf=\"modalFormElegantEmail.invalid && (modalFormElegantEmail.dirty || modalFormElegantEmail.touched)\">\r\n        Input invalid\r\n      </mdb-error>\r\n      <mdb-success\r\n        *ngIf=\"modalFormElegantEmail.valid && (modalFormElegantEmail.dirty || modalFormElegantEmail.touched)\">Input\r\n        valid\r\n      </mdb-success>\r\n    </div>\r\n\r\n    <div class=\"md-form pb-3\">\r\n      <input type=\"password\" id=\"Form-pass1\" class=\"form-control\"\r\n             name=\"password\"\r\n             [(ngModel)]=\"form.password\"\r\n             mdbInput\r\n             mdbValidate\r\n             [formControl]=\"modalFormElegantPassword\">\r\n      <label for=\"Form-pass1\">Your password</label>\r\n      <mdb-error\r\n        *ngIf=\"modalFormElegantPassword.invalid && (modalFormElegantPassword.dirty || modalFormElegantPassword.touched)\">\r\n        Input invalid\r\n      </mdb-error>\r\n      <mdb-success\r\n        *ngIf=\"modalFormElegantPassword.valid && (modalFormElegantPassword.dirty || modalFormElegantPassword.touched)\">\r\n        Input valid\r\n      </mdb-success>\r\n      <p class=\"font-small blue-text d-flex justify-content-end\">Forgot\r\n        <a href=\"#\" class=\"blue-text ml-1\"> Password?</a>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"text-center mb-3\">\r\n      <button type=\"submit\" mdbBtn gradient=\"blue\" block=\"true\" rounded=\"true\"\r\n              class=\"z-depth-1a waves-light\"\r\n              mdbWavesEffect>Sign up\r\n      </button>\r\n    </div>\r\n\r\n    <p class=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in\r\n      with:</p>\r\n    <div class=\"row my-3 d-flex justify-content-center\">\r\n      <!--Facebook-->\r\n      <button type=\"button\" mdbBtn color=\"white\" rounded=\"true\" class=\"mr-md-3 z-depth-1a waves-light\"\r\n              mdbWavesEffect>\r\n        <mdb-icon fab icon=\"facebook-f\" class=\"text-center\"></mdb-icon>\r\n      </button>\r\n      <!--Twitter-->\r\n      <button type=\"button\" mdbBtn color=\"white\" rounded=\"true\" class=\"mr-md-3 z-depth-1a waves-light\"\r\n              mdbWavesEffect>\r\n        <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n      </button>\r\n      <!--Google +-->\r\n      <button type=\"button\" mdbBtn color=\"white\" rounded=\"true\" class=\"z-depth-1a waves-light\"\r\n              mdbWavesEffect>\r\n        <mdb-icon fab icon=\"google-plus\"></mdb-icon>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\r\n      Signup failed!<br />{{ errorMessage }}\r\n    </div>\r\n\r\n  </div>\r\n  </form>\r\n  <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\r\n    Your registration is successful !\r\n  </div>\r\n  <!--Footer-->\r\n  <div class=\"modal-footer mx-5 pt-3 mb-1\">\r\n    <p class=\"font-small grey-text d-flex justify-content-end\">Not a member?\r\n      <a href=\"#\" class=\"blue-text ml-1\"> Sign Up</a>\r\n    </p>\r\n  </div>\r\n</div>\r\n<!--/.Content-->\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {Role} from '../model/Role';\r\nimport {UserService} from '../_services/user.service';\r\nimport {RoleService} from '../_services/role.service';\r\nimport {User} from '../model/User';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {AlertsService} from '../_services/alerts.service';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  users = [];\r\n  userForm: FormGroup;\r\n  listRoles: any;\r\n  listRoleSelected: Role[] = [];\r\n  errorMessage = '';\r\n  isResetPasswordFailed = false;\r\n\r\n  constructor(private userService: UserService,\r\n              private roleService: RoleService,\r\n              private alertsService: AlertsService) {\r\n  }\r\n\r\n  get password() {\r\n    return this.userForm.get('password');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllUsers();\r\n    this.getAllRole();\r\n\r\n  }\r\n\r\n  getAllUsers() {\r\n    this.userService.getUsers().subscribe((data: any[]) => {\r\n        this.users = data;\r\n      },\r\n      err => {\r\n        this.users = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllRole() {\r\n    this.roleService.getRole().subscribe(data => {\r\n        this.listRoles = data;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  editUser(user: User, modalDirective: ModalDirective) {\r\n    modalDirective.toggle();\r\n\r\n    this.userForm = new FormGroup({\r\n      id: new FormControl(user.id),\r\n      name: new FormControl(user.name),\r\n      lastName: new FormControl(user.lastName),\r\n      email: new FormControl(user.email),\r\n      password: new FormControl('', Validators.required),\r\n      roleSet: new FormControl(this.listRoleSelected)\r\n    });\r\n  }\r\n\r\n  resetPassword(modalDirective: ModalDirective): void {\r\n\r\n    const index = this.users.findIndex(user => user.id == this.userForm.value.id);\r\n    this.users[index] = this.userForm.value;\r\n    const id = this.users[index].id;\r\n\r\n    this.userService.editUserById(id, this.users[index]).subscribe(response => {\r\n\r\n        this.ngOnInit();\r\n        modalDirective.toggle();\r\n        this.alertsService.success();\r\n\r\n        this.isResetPasswordFailed = false;\r\n\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isResetPasswordFailed = true;\r\n      });\r\n  }\r\n\r\n  saveUser(modalDirective: ModalDirective): void {\r\n    modalDirective.toggle();\r\n\r\n    const index = this.users.findIndex(user => user.id == this.userForm.value.id);\r\n    this.users[index] = this.userForm.value;\r\n    const id = this.users[index].id;\r\n\r\n    this.userService.editUserById(id, this.users[index]).subscribe(response => {\r\n        this.ngOnInit();\r\n        this.alertsService.success();\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n\r\n    this.listRoleSelected = undefined;\r\n  }\r\n\r\n  deleteUser(user: User, idTable: number) {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n\r\n          const index = this.users.findIndex(obj => obj.id = user.id);\r\n          const id = this.users[index].id;\r\n\r\n          this.userService.deleteUser(id).subscribe(response => {\r\n              this.ngOnInit();\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n\r\n          this.users.splice(idTable, 1);\r\n\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n  selectedObject(role: Role) {\r\n    this.listRoleSelected.push(role);\r\n  }\r\n\r\n}\r\n","<!-- Editable table -->\r\n<div class=\"card\">\r\n  <h3 class=\"card-header text-center font-weight-bold text-uppercase py-4\">Users Profile</h3>\r\n  <div class=\"card-body\">\r\n    <div class=\"table-editable\" id=\"table\">\r\n\r\n      <table class=\"table table-bordered table-responsive-md table-striped text-center\">\r\n        <tr>\r\n          <th class=\"text-center\">Name</th>\r\n          <th class=\"text-center\">Last Name</th>\r\n          <th class=\"text-center\">Email</th>\r\n          <th class=\"text-center\">Role</th>\r\n          <th class=\"text-center\">Password</th>\r\n          <th class=\"text-center\">Edit</th>\r\n          <th class=\"text-center\">Remove</th>\r\n        </tr>\r\n        <tr *ngFor=\"let user of users; let idTable = index\">\r\n          <td>\r\n            <span>{{user.name}}</span>\r\n          </td>\r\n\r\n          <td>\r\n            <span>{{user.lastName}}</span>\r\n          </td>\r\n\r\n          <td>\r\n            <span>{{user.email}}</span>\r\n          </td>\r\n\r\n          <td>\r\n            <span *ngFor=\"let role of user.roleSet\">{{role.nameOfRole}}</span>\r\n          </td>\r\n\r\n          <td>\r\n            <span class=\"table-remove\" >\r\n              <button (click)=\"editUser(user,resetFrame)\" class=\"my-0\" color=\"default\" mdbBtn\r\n                      rounded=\"true\" size=\"sm\"\r\n                      type=\"button\">\r\n                Reset Password</button>\r\n            </span>\r\n\r\n          </td>\r\n\r\n          <td>\r\n            <span class=\"table-remove\">\r\n              <button (click)=\"editUser(user,editFrame)\" class=\"my-0\" color=\"warning\"\r\n                      mdbBtn\r\n                      mdbWavesEffect\r\n                      rounded=\"true\" size=\"sm\" type=\"button\">\r\n                Edit</button>\r\n            </span>\r\n          </td>\r\n\r\n          <td>\r\n            <span class=\"table-remove\">\r\n              <button (click)=\"deleteUser(user,idTable)\" class=\"my-0\" color=\"danger\" mdbBtn\r\n                      rounded=\"true\"\r\n                      size=\"sm\"\r\n                      type=\"button\">\r\n                Remove</button>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- Editable table -->\r\n\r\n<!-- Modal Edit User -->\r\n<div #editFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\" class=\"modal fade top\" id=\"frameModalTop\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <ng-container *ngIf=\"userForm\">\r\n        <div class=\"modal-header text-center custom-header-modal\">\r\n          <img src=\"./assets/images/edit-user-profile.png\" class=\"mx-auto\">\r\n          <button (click)=\"editFrame.hide()\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <!--Body-->\r\n        <div class=\"modal-body\">\r\n\r\n          <form (ngSubmit)=\"saveUser(editFrame)\" [formGroup]=\"userForm\">\r\n\r\n            <div class=\"form-group\">\r\n              <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n              <label class=\"col-sm-2 col-form-label\" for=\"name\">Name</label>\r\n              <input class=\"form-control\" formControlName=\"name\" id=\"name\" type=\"text\">\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n              <label class=\"col-sm-3 col-form-label\" for=\"lastName\">Last name</label>\r\n              <input class=\"form-control\" formControlName=\"lastName\" id=\"lastName\"\r\n                     type=\"text\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <mdb-icon class=\"prefix grey-text\" fas icon=\"envelope\"></mdb-icon>\r\n              <label class=\"col-sm-2 col-form-label\" for=\"email\">Email</label>\r\n              <input class=\"form-control\" formControlName=\"email\" id=\"email\" type=\"text\">\r\n            </div>\r\n\r\n            <div class=\"form-group \">\r\n              <mdb-icon fas icon=\"universal-access\" class=\"prefix grey-text\"></mdb-icon>\r\n              <label for=\"role\" class=\"col-sm-2 col-form-label\">Role</label>\r\n              <select id=\"role\" class=\"form-control\" >\r\n                <option *ngFor=\"let role of listRoles\" [value]=\"role\"\r\n                        (click)=\"selectedObject(role)\">\r\n                  {{role.nameOfRole}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"justify-content-center\" style=\"display: flex\">\r\n              <button mdbBtn type=\"submit\" style=\"background: brown; color: white\"\r\n                      rounded=\"true\" mdbWavesEffect>Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal ResetPassword -->\r\n<div #resetFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\" id=\"frameModalTopResetPassword\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog modal-notify modal-warning\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n\r\n      <ng-container *ngIf=\"userForm\">\r\n        <div class=\"modal-header text-center\">\r\n          <h4 class=\"modal-title white-text w-100 font-weight-bold py-2\">Reset Password</h4>\r\n          <button (click)=\"resetFrame.hide()\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                  type=\"button\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <!--Body-->\r\n        <div class=\"modal-body\">\r\n\r\n          <form (ngSubmit)=\"rstPassword.form.valid && resetPassword(resetFrame)\"\r\n                [formGroup]=\"userForm\" #rstPassword = \"ngForm\">\r\n\r\n            <div class=\"form-group\">\r\n              <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n              <label class=\"col-sm-2 col-form-label\" for=\"password\">Password</label>\r\n              <input class=\"form-control\" formControlName=\"password\" id=\"password\" type=\"password\">\r\n\r\n              <mdb-error\r\n                *ngIf=\"password.invalid && (password.dirty || password.touched)\">\r\n                Password invalid\r\n              </mdb-error>\r\n\r\n            </div>\r\n\r\n            <div class=\"alert alert-warning\" *ngIf=\"rstPassword.submitted && isResetPasswordFailed\">\r\n              Reset Password failed !<br />{{ errorMessage }}\r\n            </div>\r\n\r\n            <div class=\"justify-content-center\" style=\"display: flex\">\r\n              <button mdbBtn type=\"submit\" color=\"warning\" rounded=\"true\" mdbWavesEffect >\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Book} from '../model/Book';\r\n\r\nconst API_URL = 'http://localhost:8080/api/books/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllBooks(): Observable<Book> {\r\n    return this.http.get<Book>(API_URL);\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book>{\r\n    return this.http.get<Book>(API_URL + id);\r\n  }\r\n  addBook(book: Book): Observable<Book> {\r\n    return this.http.post<Book>(API_URL, {\r\n      title: book.title,\r\n      author: book.author,\r\n      stock: book.stock,\r\n      bookImageUrl: book.bookImageUrl,\r\n      bookCategory: book.bookCategory,\r\n      fictional: book.fictional,\r\n      nonfictional: book.nonfictional\r\n    }, httpOptions);\r\n  }\r\n\r\n  editBookById(id: number, book: Book): Observable<Book>{\r\n    return this.http.put<Book>(API_URL + id, {\r\n      title: book.title,\r\n      author: book.author,\r\n      stock: book.stock,\r\n      bookImageUrl: book.bookImageUrl,\r\n      bookCategory: book.bookCategory,\r\n      fictional: book.fictional,\r\n      nonfictional: book.nonfictional\r\n    }, httpOptions);\r\n  }\r\n\r\n  deleteBookById(id: number): Observable<Book>{\r\n    return this.http.delete<Book>(API_URL + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReloadPageService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  reload(){\r\n    const currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ClientService} from '../../_services/client.service';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AlertsService} from '../../_services/alerts.service';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {Client} from '../../model/Client';\r\nimport swal from 'sweetalert';\r\nimport {ReloadPageService} from '../../_services/reload-page.service';\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.scss']\r\n})\r\nexport class ClientComponent implements OnInit {\r\n\r\n  clients = [];\r\n  addClientForm: FormGroup;\r\n  editClientForm: FormGroup;\r\n  errorMessage = '';\r\n  isClientAlreadyExists = false;\r\n\r\n\r\n  constructor(private clientService: ClientService,\r\n              private alertsService: AlertsService,\r\n              private reloadPageService: ReloadPageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getClients();\r\n    this.formClient();\r\n  }\r\n\r\n  formClient() {\r\n    this.addClientForm = new FormGroup({\r\n      firstName: new FormControl(''),\r\n      lastName: new FormControl(''),\r\n      email: new FormControl(''),\r\n      phoneNumber: new FormControl('')\r\n    });\r\n  }\r\n\r\n  editFormClient(modalDirective: ModalDirective, client: Client) {\r\n    modalDirective.toggle();\r\n\r\n    this.editClientForm = new FormGroup({\r\n      id: new FormControl(client.id),\r\n      firstName: new FormControl(client.firstName),\r\n      lastName: new FormControl(client.lastName),\r\n      email: new FormControl(client.email),\r\n      phoneNumber: new FormControl(client.phoneNumber)\r\n    });\r\n  }\r\n\r\n  getClients() {\r\n    this.clientService.getAllClients().subscribe((data: any) => {\r\n        this.clients = data;\r\n      },\r\n      err => {\r\n        this.clients = JSON.parse(err.message).message;\r\n      });\r\n  }\r\n\r\n  addClient(modalDirective: ModalDirective) {\r\n    this.clientService.addClient(this.addClientForm.value).subscribe(response => {\r\n        this.alertsService.success();\r\n        this.isClientAlreadyExists = false;\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isClientAlreadyExists = true;\r\n      });\r\n  }\r\n\r\n  updateClient(modalDirective: ModalDirective) {\r\n    const index = this.clients.find(client => client.id == this.editClientForm.value.id);\r\n    this.clients[index] = this.editClientForm.value;\r\n    const id = this.clients[index].id;\r\n\r\n    this.clientService.editClientById(id, this.clients[index]).subscribe(response => {\r\n        this.alertsService.success();\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n        this.isClientAlreadyExists = false;\r\n      },\r\n      err => {\r\n        this.errorMessage = err.error.message;\r\n        this.isClientAlreadyExists = true;\r\n      });\r\n  }\r\n\r\n  deleteClient(client: Client) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          this.clientService.deleteClientById(client.id).subscribe(response => {\r\n            this.reloadPageService.reload();\r\n          }, error => {\r\n            console.log(error);\r\n          });\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!-- Navbar Client-->\r\n<mdb-navbar\r\n  SideClass=\"navbar fixed-top-author navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav grey lighten-5 navbar-dark\"\r\n  [containerInside]=\"false\">\r\n  <navlinks class=\"navbar-container\">\r\n    <mdb-icon class=\"fas-author\" fas icon=\"user-friends\"></mdb-icon>\r\n  </navlinks>\r\n  <navlinks class=\"navbar-container\">\r\n    <span class=\"clearfix d-none d-sm-inline-block span-client\">Clients</span>\r\n  </navlinks>\r\n  <navlinks>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n      <li class=\"nav-item\">\r\n        <button (click)=\"clientFrame.toggle()\" color=\"primary\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n                size=\"md\"\r\n                type=\"button\">Add Client\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </navlinks>\r\n</mdb-navbar>\r\n<!-- End navbar -->\r\n\r\n<!-- Modal Edit Book -->\r\n<div #clientFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\"\r\n     id=\"frameModalClient\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <div class=\"modal-header text-center custom-header-modal\">\r\n\r\n        <img class=\"mx-auto\" src=\"./assets/images/add-client.png\">\r\n\r\n        <button (click)=\"clientFrame.hide()\" aria-label=\"Close\" class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <!--Body-->\r\n      <div class=\"modal-body\">\r\n        <form (ngSubmit)=\"addClient(clientFrame)\" [formGroup]=\"addClientForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"user-alt\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"firstName\">First Name</label>\r\n                <input class=\"form-control\" formControlName=\"firstName\"\r\n                       id=\"firstName\" type=\"text\">\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"user-alt\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"lastName\">Last Name</label>\r\n                <input class=\"form-control\" formControlName=\"lastName\"\r\n                       id=\"lastName\" type=\"text\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"envelope\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"email\">Email</label>\r\n                <input class=\"form-control\" formControlName=\"email\" id=\"email\"\r\n                       type=\"email\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"phone-alt\"></mdb-icon>\r\n                <label class=\"col-sm-8 col-form-label\" for=\"phoneNumber\">Phone Number</label>\r\n                <input class=\"form-control\" formControlName=\"phoneNumber\"\r\n                       id=\"phoneNumber\" type=\"text\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"justify-content-center\" style=\"display: flex\">\r\n            <button mdbBtn mdbWavesEffect rounded=\"true\"\r\n                    style=\"background: brown; color: white\" type=\"submit\">Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End modal -->\r\n\r\n<!-- Modal Edit Client -->\r\n<div mdbModal #editClientFrame=\"mdbModal\" class=\"modal fade top\" id=\"editFrameModalClient\" tabindex=\"-1\" role=\"dialog\"\r\n     aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <ng-container *ngIf=\"editClientForm\">\r\n        <!--Header-->\r\n        <div class=\"modal-header text-center custom-header-modal\">\r\n          <img src=\"./assets/images/edit-client.png\" class=\"mx-auto\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"editClientFrame.hide()\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <!--Body-->\r\n        <div class=\"modal-body\">\r\n          <form [formGroup]=\"editClientForm\" (ngSubmit)=\"updateClient(editClientFrame)\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"user-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label for=\"editFirstName\" class=\"col-sm-6 col-form-label\">First Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"editFirstName\"\r\n                         formControlName=\"firstName\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"user-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label for=\"editLastName\" class=\"col-sm-6 col-form-label\">Last Name</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"editLastName\"\r\n                         formControlName=\"lastName\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"envelope\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label for=\"editEmail\" class=\"col-sm-6 col-form-label\">Email</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"editEmail\"\r\n                         formControlName=\"email\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"phone-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label for=\"editPhoneNumber\" class=\"col-sm-8 col-form-label\">Phone Number</label>\r\n                  <input type=\"text\" class=\"form-control\" id=\"editPhoneNumber\"\r\n                         formControlName=\"phoneNumber\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"justify-content-center\" style=\"display: flex\">\r\n              <button mdbBtn type=\"submit\" style=\"background: brown; color: white\" rounded=\"true\" mdbWavesEffect>Save</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End Modal Edit Client -->\r\n\r\n\r\n<!-- Content -->\r\n<div class=\"row my-5\">\r\n  <div *ngFor=\"let client of clients\" class=\"col-lg-3 col-md-3\">\r\n    <!--Card-->\r\n    <mdb-card cascade=\"true\">\r\n\r\n      <!--Card image-->\r\n      <div class=\"view view-cascade card-header\" style=\"background: gainsboro\">\r\n        <h2 style=\"color: black; font-weight: 400\">{{client.firstName}}</h2>\r\n      </div>\r\n      <!--/Card image-->\r\n\r\n      <mdb-card-body cascade=\"true\" class=\"text-center\">\r\n        <!--Card content-->\r\n\r\n        <p>\r\n          <span class=\"span-card-body\"><i class=\"fas fa-user\"></i> Full name: </span>\r\n          {{client.firstName}} {{client.lastName}}\r\n        </p>\r\n\r\n        <p>\r\n          <span class=\"span-card-body\"><i class=\"fas fa-envelope\"></i> Email: </span>\r\n          {{client.email}}\r\n        </p>\r\n\r\n        <p>\r\n          <span class=\"span-card-body\"><i class=\"fas fa-phone-alt\"></i> Phone Number: </span>\r\n          {{client.phoneNumber}}\r\n        </p>\r\n\r\n        <p>\r\n          <span class=\"span-card-body\"><i class=\"fas fa-calendar-alt\"></i> Reservations: </span>\r\n          TODO...\r\n        </p>\r\n\r\n      </mdb-card-body>\r\n      <!--/.Card content-->\r\n\r\n      <mdb-card-footer>\r\n        <ul class=\"list-unstyled list-inline font-small\">\r\n          <button class=\"button-newCard\"\r\n                  style=\"color: #2bbbad;\"><i class=\"fas fa-comment\"></i></button>\r\n          <button (click)=\"editFormClient(editClientFrame, client)\" class=\"button-newCard\"\r\n                  style=\"color: #ffbb33;\"><i class=\"fas fa-user-edit\"></i></button>\r\n          <button (click)=\"deleteClient(client)\" class=\"button-newCard\"\r\n                  style=\"color: #ff4444;\"><i class=\"far fa-trash-alt\"></i></button>\r\n        </ul>\r\n      </mdb-card-footer>\r\n    </mdb-card>\r\n    <!--/.Card-->\r\n  </div>\r\n</div>\r\n<!-- End Content -->\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"full\">\r\n    <div class=\"row \" >\r\n        <div class=\"col-md-8\">\r\n            <h2 class=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\r\n            <h4>The requested URL was not found on this server.</h4>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <img src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\" alt=\"Error 404\" class=\"img-fluid\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst AUTH_API = 'http://localhost:8080/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(credentials): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signin', {\r\n      email: credentials.email,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'signup', {\r\n      email: user.email,\r\n      password: user.password,\r\n      name: user.name,\r\n      lastName: user.lastName\r\n    }, httpOptions);\r\n  }\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {BookImageUrlService} from '../../_services/book-image-url.service';\r\nimport {BookCategoryTypeService} from '../../_services/book-category-type.service';\r\nimport {BookService} from '../../_services/book.service';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthorService} from '../../_services/author.service';\r\nimport {BookCategory} from '../../model/BookCategory';\r\nimport {BookImageUrl} from '../../model/BookImageUrl';\r\nimport {AlertsService} from '../../_services/alerts.service';\r\nimport {Book} from 'src/app/model/Book';\r\nimport swal from 'sweetalert';\r\nimport {ReloadPageService} from '../../_services/reload-page.service';\r\nimport {DomSanitizer} from \"@angular/platform-browser\";\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.scss']\r\n})\r\nexport class BookComponent implements OnInit {\r\n\r\n  bookImages = [];\r\n  bookCategories = [];\r\n  fictionals = [];\r\n  nonfictionals = [];\r\n  books = [];\r\n  authors = [];\r\n  addBookForm: FormGroup;\r\n  editBookForm: FormGroup;\r\n\r\n  errorMessage = '';\r\n  isErrorSelected = false;\r\n\r\n  isFictional = false;\r\n  isNonfictional = false;\r\n\r\n  preSelectedTitle = '';\r\n\r\n  constructor(private bookImageUrlService: BookImageUrlService,\r\n              private bookCategoryTypeService: BookCategoryTypeService,\r\n              private bookService: BookService,\r\n              private authorService: AuthorService,\r\n              private alertsService: AlertsService,\r\n              private reloadPageService: ReloadPageService,\r\n              private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBookImages();\r\n    this.getAllBooks();\r\n    this.getAllAuthors();\r\n    this.getAllBookCategories();\r\n    this.getAllFictionals();\r\n    this.getAllNonfictionals();\r\n    this.formBook();\r\n  }\r\n\r\n  formBook() {\r\n    this.addBookForm = new FormGroup({\r\n      title: new FormControl(''),\r\n      author: new FormControl(''),\r\n      stock: new FormControl('', Validators.required),\r\n      bookImageUrl: new FormControl(''),\r\n      bookCategory: new FormControl(''),\r\n      fictional: new FormControl(),\r\n      nonfictional: new FormControl()\r\n    });\r\n  }\r\n\r\n  editFormBook(book: Book, modalDirective: ModalDirective) {\r\n\r\n    const bookImageSelected = this.bookImages.find(i => i.id == book.bookImageUrl.id);\r\n    const bookCategorySelected = this.bookCategories.find(i => i.id == book.bookCategory.id);\r\n    const authorSelected = this.authors.find(i => i.id == book.author.id);\r\n\r\n    this.editBookForm = new FormGroup({\r\n      id: new FormControl(book.id),\r\n      title: new FormControl(book.title),\r\n      author: new FormControl(book.author),\r\n      stock: new FormControl(book.stock),\r\n      bookImageUrl: new FormControl(book.bookImageUrl),\r\n      bookCategory: new FormControl(book.bookCategory),\r\n      fictional: new FormControl(book.fictional),\r\n      nonfictional: new FormControl(book.nonfictional)\r\n    });\r\n\r\n    this.editBookForm.get('author').setValue(authorSelected);\r\n    this.editBookForm.get('bookImageUrl').setValue(bookImageSelected);\r\n    this.editBookForm.get('bookCategory').setValue(bookCategorySelected);\r\n\r\n    if (book.fictional != null) {\r\n      const fictionalSelected = this.fictionals.find(i => i.id == book.fictional.id);\r\n      this.editBookForm.get('fictional').setValue(fictionalSelected);\r\n      this.isFictional = true;\r\n      this.isNonfictional = false;\r\n\r\n    }\r\n\r\n    if (book.nonfictional != null) {\r\n      const nonfictionalSelected = this.nonfictionals.find(i => i.id == book.nonfictional.id);\r\n      this.editBookForm.get('nonfictional').setValue(nonfictionalSelected);\r\n      this.isNonfictional = true;\r\n      this.isFictional = false;\r\n    }\r\n\r\n    modalDirective.toggle();\r\n  }\r\n\r\n  getAllBookImages() {\r\n    this.bookImageUrlService.getAllImageBook().subscribe((data: any) => {\r\n        this.bookImages = data;\r\n      },\r\n      err => {\r\n        this.bookImages = JSON.parse(err.message).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllAuthors() {\r\n    this.authorService.getAllAuthors().subscribe((data: any) => {\r\n      this.authors = data;\r\n    }, error => {\r\n      this.authors = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllBooks() {\r\n    this.bookService.getAllBooks().subscribe((data: any) => {\r\n      this.books = data;\r\n\r\n      this.books.forEach((imageBook: any) => {\r\n        imageBook.bookImageUrl.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${imageBook.bookImageUrl.imageUrl}`);\r\n      });\r\n\r\n    }, error => {\r\n      this.books = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllBookCategories() {\r\n    this.bookCategoryTypeService.getAllBookCategories().subscribe((data: any) => {\r\n      this.bookCategories = data;\r\n    }, error => {\r\n      this.bookCategories = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllFictionals() {\r\n    this.bookCategoryTypeService.getAllFictional().subscribe((data: any) => {\r\n      this.fictionals = data;\r\n    }, error => {\r\n      this.fictionals = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllNonfictionals() {\r\n    this.bookCategoryTypeService.getAllNonfictional().subscribe((data: any) => {\r\n        this.nonfictionals = data;\r\n      },\r\n      error => {\r\n        this.nonfictionals = JSON.parse(error.message).message;\r\n      });\r\n  }\r\n\r\n  addBook(modalDirective: ModalDirective) {\r\n\r\n    if (this.addBookForm.value.author == ''){\r\n      this.addBookForm.get('author').setValue(null);\r\n    }\r\n\r\n    if (this.addBookForm.value.bookCategory == ''){\r\n      this.addBookForm.get('bookCategory').setValue(null);\r\n    }\r\n\r\n    this.bookService.addBook(this.addBookForm.value).subscribe(response => {\r\n        this.reloadPageService.reload();\r\n        this.alertsService.success();\r\n        modalDirective.toggle();\r\n        this.isNonfictional = false;\r\n        this.isFictional = false;\r\n        this.isErrorSelected = false;\r\n      },\r\n      error => {\r\n        this.errorMessage = error.error.message;\r\n        this.isErrorSelected = true;\r\n      });\r\n  }\r\n\r\n  updateBook(modalDirective: ModalDirective): void {\r\n    const index = this.books.findIndex(book => book.id == this.editBookForm.value.id);\r\n    this.books[index] = this.editBookForm.value;\r\n    const id = this.books[index].id;\r\n\r\n    this.bookService.editBookById(id, this.books[index]).subscribe(response => {\r\n        this.reloadPageService.reload();\r\n        this.alertsService.success();\r\n        modalDirective.toggle();\r\n\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  deleteBook(book: Book) {\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          this.bookService.deleteBookById(Number(book.id)).subscribe(response => {\r\n              this.reloadPageService.reload();\r\n              this.alertsService.warning();\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            });\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  isFictionalSelected(bookCategory: BookCategory) {\r\n    if (bookCategory.nameOfBookCategory == 'Fiction') {\r\n      this.isFictional = true;\r\n      this.isNonfictional = false;\r\n    }\r\n\r\n    if (bookCategory.nameOfBookCategory == 'Nonfiction') {\r\n      this.isFictional = false;\r\n      this.isNonfictional = true;\r\n    }\r\n  }\r\n\r\n  getPreSelectedTitle(bookImageUrl: BookImageUrl) {\r\n    this.preSelectedTitle = bookImageUrl.title;\r\n  }\r\n\r\n}\r\n","<!-- Navbar Authors-->\r\n<mdb-navbar\r\n  SideClass=\"navbar fixed-top-author navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav grey lighten-5 navbar-dark\"\r\n  [containerInside]=\"false\">\r\n  <navlinks class=\"navbar-container\">\r\n    <mdb-icon class=\"fas-author\" fas icon=\"address-book\"></mdb-icon>\r\n  </navlinks>\r\n  <navlinks class=\"navbar-container\">\r\n    <span class=\"clearfix d-none d-sm-inline-block span-book\">Books</span>\r\n  </navlinks>\r\n  <navlinks>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n      <li class=\"nav-item\">\r\n        <button (click)=\"bookFrame.toggle()\" color=\"primary\" mdbBtn mdbWavesEffect\r\n                rounded=\"true\"\r\n                size=\"md\" type=\"button\">Add Book\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </navlinks>\r\n</mdb-navbar>\r\n<!-- End navbar -->\r\n\r\n\r\n<!-- Modal Add new Book -->\r\n<div #bookFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\"\r\n     id=\"bookFrame\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <div class=\"modal-header text-center custom-header-modal\">\r\n\r\n        <img src=\"./assets/images/addBook.png\" class=\"mx-auto\">\r\n\r\n        <button (click)=\"bookFrame.hide()\" aria-label=\"Close\" class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <!--Body-->\r\n      <div class=\"modal-body\">\r\n\r\n        <form #addBookValidate = \"ngForm\"\r\n              (ngSubmit)=\"addBookValidate.submitted && addBook(bookFrame)\"\r\n              [formGroup]=\"addBookForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon fas icon=\"pen-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"title\">Title</label>\r\n                <input [(ngModel)]=\"preSelectedTitle\" class=\"form-control\" disabled\r\n                       formControlName=\"title\"\r\n                       id=\"title\" type=\"text\">\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon fas icon=\"user-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"author\">Author</label>\r\n                <select class=\"form-control\" formControlName=\"author\" id=\"author\">\r\n                  <option disabled hidden selected value=\"\">Select author...</option>\r\n                  <option *ngFor=\"let author of authors\" [ngValue]=\"author\">\r\n                    {{author.firstName}} {{author.lastName}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon fas icon=\"check\" class=\"prefix grey-text\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"stock\">Stock</label>\r\n                <input class=\"form-control\" formControlName=\"stock\" id=\"stock\" min=0\r\n                       oninput=\"validity.valid||(value='')\" type=\"number\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon fas icon=\"file-image\" class=\"prefix grey-text\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"bookImageUrl\">Book Image</label>\r\n                <select class=\"form-control\" formControlName=\"bookImageUrl\" id=\"bookImageUrl\">\r\n                  <option disabled selected value=\"\">Select image...</option>\r\n                  <option (click)=\"getPreSelectedTitle(bookImage)\"\r\n                          *ngFor=\"let bookImage of bookImages\"\r\n                          [ngValue]=\"bookImage\">\r\n                    {{bookImage.title}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon fas icon=\"caret-square-right\" class=\"prefix grey-text\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"bookCategory\">Category</label>\r\n                <select class=\"form-control\" formControlName=\"bookCategory\" id=\"bookCategory\">\r\n                  <option disabled hidden selected value=\"\">Select Category...</option>\r\n                  <option (click)=\"isFictionalSelected(category)\"\r\n                          *ngFor=\"let category of bookCategories\"\r\n                          [ngValue]=\"category\">\r\n                    {{category.nameOfBookCategory}}\r\n                  </option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n\r\n                <div *ngIf=\"isFictional\">\r\n                  <mdb-icon fas icon=\"clipboard-list\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"fictional\">Type</label>\r\n                  <select class=\"form-control\" formControlName=\"fictional\" id=\"fictional\">\r\n                    <option disabled hidden selected value=\"\">Select Type...</option>\r\n                    <option *ngFor=\"let fictional of fictionals\" [ngValue]=\"fictional\">\r\n                      {{fictional.nameOfFictional}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div *ngIf=\"isNonfictional\">\r\n                  <mdb-icon fas icon=\"clipboard-list\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"fictional\">Type</label>\r\n                  <select class=\"form-control\" formControlName=\"nonfictional\" id=\"nonfictional\">\r\n                    <option disabled hidden selected value=\"\">Select Type...</option>\r\n                    <option *ngFor=\"let nonfictional of nonfictionals\" [ngValue]=\"nonfictional\">\r\n                      {{nonfictional.nameOfNonfictional}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"addBookValidate.submitted && isErrorSelected\" class=\"alert alert-warning\">\r\n            {{errorMessage}}\r\n          </div>\r\n\r\n          <div class=\"justify-content-center\" style=\"display: flex\">\r\n            <button mdbBtn mdbWavesEffect style=\"background: brown; color: white\"\r\n                    rounded=\"true\" type=\"submit\">Add\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End modal -->\r\n\r\n<!-- Modal Edit Book -->\r\n<div #editBookFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\"\r\n     id=\"editBookFrame\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <div class=\"modal-header text-center custom-header-modal\">\r\n\r\n        <img src=\"./assets/images/edit-book.png\" class=\"mx-auto\">\r\n\r\n        <button (click)=\"editBookFrame.hide()\" aria-label=\"Close\" class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <!--Body-->\r\n      <div class=\"modal-body\">\r\n        <ng-container *ngIf=\"editBookForm\">\r\n          <form (ngSubmit)=\"updateBook(editBookFrame)\" [formGroup]=\"editBookForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"pen-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"editTitle\">Title</label>\r\n                  <input class=\"form-control\" formControlName=\"title\"\r\n                         id=\"editTitle\" type=\"text\">\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"user-alt\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"editAuthor\">Author</label>\r\n                  <select class=\"form-control\" formControlName=\"author\" id=\"editAuthor\">\r\n                    <option *ngFor=\"let author of authors\" [ngValue]=\"author\">\r\n                      {{author.firstName}} {{author.lastName}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"check\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"editStock\">Stock</label>\r\n                  <input class=\"form-control\" formControlName=\"stock\" id=\"editStock\"\r\n                         oninput=\"validity.valid||(value='')\" type=\"number\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"file-image\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"editBookImageUrl\">Book Image</label>\r\n                  <select class=\"form-control\" formControlName=\"bookImageUrl\" id=\"editBookImageUrl\">\r\n                    <option *ngFor=\"let bookImage of bookImages\" [ngValue]=\"bookImage\">\r\n                      {{bookImage.title}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon fas icon=\"caret-square-right\" class=\"prefix grey-text\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"editBookCategory\">Category</label>\r\n                  <select class=\"form-control\" formControlName=\"bookCategory\" id=\"editBookCategory\">\r\n                    <option disabled hidden selected value=\"\">Select Category</option>\r\n                    <option (click)=\"isFictionalSelected(category)\"\r\n                            *ngFor=\"let category of bookCategories\"\r\n                            [ngValue]=\"category\">\r\n                      {{category.nameOfBookCategory}}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <div *ngIf=\"isFictional\">\r\n                    <mdb-icon fas icon=\"clipboard-list\" class=\"prefix grey-text\"></mdb-icon>\r\n                    <label class=\"col-sm-6 col-form-label\" for=\"editFictional\">Type</label>\r\n                    <select class=\"form-control\" formControlName=\"fictional\" id=\"editFictional\">\r\n                      <option disabled hidden selected value=\"\">Select Type</option>\r\n                      <option *ngFor=\"let fictional of fictionals\" [ngValue]=\"fictional\">\r\n                        {{fictional.nameOfFictional}}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div *ngIf=\"isNonfictional\">\r\n                    <mdb-icon fas icon=\"clipboard-list\" class=\"prefix grey-text\"></mdb-icon>\r\n                    <label class=\"col-sm-6 col-form-label\" for=\"editNonfictional\">Type</label>\r\n                    <select class=\"form-control\" formControlName=\"nonfictional\"\r\n                            id=\"editNonfictional\">\r\n                      <option disabled hidden selected value=\"\">Select Type</option>\r\n                      <option *ngFor=\"let nonfictional of nonfictionals\" [ngValue]=\"nonfictional\">\r\n                        {{nonfictional.nameOfNonfictional}}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"justify-content-center\" style=\"display: flex\">\r\n              <button mdbBtn mdbWavesEffect style=\"background: brown; color: white\"\r\n                      rounded=\"true\" type=\"submit\">Update\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End modal -->\r\n\r\n\r\n<!--Content-->\r\n\r\n<div class=\"row my-5\">\r\n  <div *ngFor=\"let book of books\" class=\"col-md-3 col-md-6\">\r\n    <div class=\"card mb-4\">\r\n      <div class=\"view\">\r\n        <img alt=\"Card image cap\" class=\"card-img-top\" [src]=\"book.bookImageUrl.imageUrl\">\r\n      </div>\r\n      <!-- card Body -->\r\n      <div class=\"card-body p-3\">\r\n        <h5 class=\"card-title font-weight-bold fuchsia-rose-text mb-0\"\r\n            style=\"font-size: 15px\">{{book.author.firstName}} {{book.author.lastName}}</h5>\r\n        <h5 class=\"card-title font-weight-bold fuchsia-rose-text mb-0\" style=\"font-size: 15px\">{{book.title}}</h5>\r\n        <p *ngIf=\"book.fictional != null\" class=\"aqua-sky-text mb-0\">{{book.bookCategory.nameOfBookCategory}} : {{book.fictional.nameOfFictional}}</p>\r\n        <p *ngIf=\"book.nonfictional != null\" class=\"aqua-sky-text mb-0\">{{book.bookCategory.nameOfBookCategory}} : {{book.nonfictional.nameOfNonfictional}}</p>\r\n        <p class=\"font-weight-bold mb-0\" style=\"font-size: 20px\"><img class=\"card-img-top\" src=\"./assets/images/in-stock.png\" alt=\"Card image cap\" style=\"width: 35px; height: 30px\">{{book.stock}}</p>\r\n      </div>\r\n      <!-- End Body-->\r\n\r\n      <!-- Card footer -->\r\n      <div class=\"rounded-bottom mdb-color lighten-3 text-center pt-3\">\r\n        <ul class=\"list-unstyled list-inline font-small\">\r\n          <li class=\"list-inline-item pr-2 white-text\"><i class=\"far fa-clock pr-1\"></i>05/10/2015</li>\r\n          <li class=\"list-inline-item pr-2\"><a href=\"#\" class=\"white-text\"><i\r\n            class=\"far fa-comments pr-1\"></i>12</a></li>\r\n\r\n        <button (click)=\"editFormBook(book,editBookFrame)\"\r\n                class=\"button-newCard\" style=\"color: #ffbb33;\"><i\r\n          class=\"fas fa-user-edit\"></i></button>\r\n        <button (click)=\"deleteBook(book)\" class=\"button-newCard\"\r\n                style=\"color: #ff4444;\"><i class=\"far fa-trash-alt\"></i></button>\r\n        </ul>\r\n      </div>\r\n      <!-- End footer -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--End Content-->\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {UserService} from '../_services/user.service';\r\nimport {MDBModalRef, MDBModalService} from 'ng-uikit-pro-standard';\r\nimport {LoginComponent} from '../login/login.component';\r\nimport {RegisterComponent} from '../register/register.component';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    modalRef: MDBModalRef;\r\n    modalRefRegister: MDBModalRef;\r\n\r\n    constructor(private userService: UserService,\r\n                private tokenStorage: TokenStorageService,\r\n                private modalService: MDBModalService,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.tokenStorage.getToken() != null) {\r\n            this.router.navigateByUrl('/dashboard');\r\n        }\r\n    }\r\n\r\n    openModalLogin() {\r\n        this.modalRef = this.modalService.show(LoginComponent);\r\n    }\r\n\r\n    openModalRegister() {\r\n        this.modalRefRegister = this.modalService.show(RegisterComponent);\r\n\r\n    }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"row\">\r\n\r\n                <mdb-card class=\"testimonial-card text-center\">\r\n                    <mdb-card-header>\r\n                        <p>Manage your library with our application</p>\r\n                    </mdb-card-header>\r\n                    <!--Bacground color-->\r\n                    <div class=\"card-up white lighten-1\">\r\n                    </div>\r\n\r\n                    <!--Avatar-->\r\n                    <div class=\"avatar mx-auto\">\r\n                        <img class=\"rounded-circle\" src=\"/assets/images/login.png\">\r\n                    </div>\r\n\r\n                    <mdb-card-body>\r\n                        <p>\r\n                            <button (click)=\"openModalLogin()\" block=\"true\" gradient=\"blue\" mdbBtn rounded=\"true\" type=\"button\">Login</button>\r\n                        </p>\r\n                    </mdb-card-body>\r\n                </mdb-card>\r\n\r\n                <mdb-card class=\"testimonial-card text-center\">\r\n                    <!--Bacground color-->\r\n                    <div class=\"card-up white lighten-1\">\r\n                    </div>\r\n\r\n                    <!--Avatar-->\r\n                    <div class=\"avatar mx-auto\">\r\n                        <img class=\"rounded-circle\" src=\"/assets/images/register.png\">\r\n                    </div>\r\n\r\n                    <mdb-card-body>\r\n                        <p>\r\n                            <button (click)=\"openModalRegister()\" block=\"true\" gradient=\"blue\" mdbBtn mdbWavesEffect rounded=\"true\" type=\"button\">\r\n                                Register\r\n                            </button>\r\n                        </p>\r\n                    </mdb-card-body>\r\n\r\n                    <mdb-card-footer>\r\n                        © 2020 Copyright: Chiriac Gabriel & Chiriac Ionut\r\n                    </mdb-card-footer>\r\n\r\n                </mdb-card>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-8 view\">\r\n            <img alt=\"Responsive image\" class=\"img-fluid\" src=\"/assets/images/LMS-background.png\">\r\n            <div class=\"mask flex-center rgba-blue-slight\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthorService} from '../../../_services/author.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Author} from '../../../model/Author';\r\nimport {AuthorImageUrl} from '../../../model/AuthorImageUrl';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-author-details',\r\n  templateUrl: './author-details.component.html',\r\n  styleUrls: ['./author-details.component.scss']\r\n})\r\nexport class AuthorDetailsComponent implements OnInit {\r\n\r\n  author: Author;\r\n\r\n  constructor(private authorService: AuthorService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private sanitizer: DomSanitizer) {\r\n    this.author = new Author();\r\n    this.author.authorImageUrl = new AuthorImageUrl();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\r\n    this.authorService.getAuthorById(Number(id)).subscribe(author => {\r\n      this.author = author;\r\n      this.author.authorImageUrl.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${this.author.authorImageUrl.imageUrl}`);\r\n      this.author.bookSet.forEach((image: any) => {\r\n        image.bookImageUrl.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image.bookImageUrl.imageUrl}`);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<!-- Navbar Authors-->\r\n<mdb-navbar\r\n  SideClass=\"navbar fixed-top-author navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav grey lighten-5 navbar-dark\"\r\n  [containerInside]=\"false\">\r\n  <navlinks class=\"navbar-container\">\r\n    <mdb-icon class=\"fas-author\" fas icon=\"address-book\"></mdb-icon>\r\n  </navlinks>\r\n  <navlinks class=\"navbar-container\">\r\n    <span class=\"clearfix d-none d-sm-inline-block span-author\">Authors</span>\r\n  </navlinks>\r\n  <navlinks>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n      <li class=\"nav-item\">\r\n        <a mdbBtn type=\"button\" floating=\"true\" size=\"sm\" color=\"default\"\r\n           class=\"waves-light\" mdbWavesEffect\r\n           [routerLink]=\"['/dashboard/author']\">\r\n          <mdb-icon fas icon=\"arrow-left\"></mdb-icon>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </navlinks>\r\n\r\n\r\n</mdb-navbar>\r\n\r\n<!-- End navbar -->\r\n\r\n<!--Content Author Info-->\r\n<section class=\"magazine-section my-5\">\r\n\r\n  <!-- Section heading -->\r\n  <h2 class=\"h1-responsive font-weight-bold text-center\">{{author.firstName}} {{author.lastName}}</h2>\r\n  <!-- Section description -->\r\n  <h4 class=\"text-center dark-grey-text w-responsive mx-auto\">{{author.dateOfBirth}}</h4>\r\n\r\n  <!-- Grid row -->\r\n  <div class=\"row\">\r\n\r\n    <!-- Grid column -->\r\n    <div class=\"col-lg-6 col-md-12\">\r\n\r\n      <!-- Featured news -->\r\n      <div class=\"single-news mb-lg-0 mb-4\">\r\n\r\n        <!-- Image -->\r\n        <div class=\"view overlay rounded z-depth-1-half mb-4\">\r\n          <img class=\"img-fluid\" [src]=\"author.authorImageUrl.imageUrl\">\r\n          <a>\r\n            <div class=\"mask rgba-white-slight waves-light\" mdbWavesEffect></div>\r\n          </a>\r\n        </div>\r\n\r\n        <!-- Data -->\r\n        <div class=\"news-data d-flex justify-content-between\">\r\n\r\n            <h5 class=\"font-weight-bold\">\r\n              <mdb-icon fas icon=\"user-edit\" class=\"pr-2\"></mdb-icon>{{author.type}}</h5>\r\n\r\n          <p class=\"font-weight-bold dark-grey-text\">\r\n            <mdb-icon far icon=\"flag\" class=\"pr-2\"></mdb-icon>{{author.nationality}}</p>\r\n        </div>\r\n\r\n        <!-- Excerpt -->\r\n        <p class=\"dark-grey-text mb-lg-0 mb-md-5 mb-4\"\r\n           style=\"text-align: justify; text-justify: inter-word\">{{author.description}}</p>\r\n\r\n      </div>\r\n      <!-- Featured news -->\r\n\r\n    </div>\r\n    <!-- Grid column -->\r\n\r\n    <!-- Grid column -->\r\n    <div class=\"col-lg-6\">\r\n      <div class=\"single-news mb-4\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-5\" *ngFor=\"let book of author.bookSet\">\r\n\r\n            <!--Book ImageUrl-->\r\n            <div class=\"view overlay rounded z-depth-1 mb-4\" style=\"width: 250px; height: 350px\">\r\n              <img class=\"img-fluid\" [src]=\"book.bookImageUrl.imageUrl\" alt=\"Sample image\">\r\n              <a>\r\n                <div class=\"mask rgba-white-slight waves-light\" mdbWavesEffect></div>\r\n              </a>\r\n            </div>\r\n            <!--END Book ImageUrl-->\r\n\r\n            <p class=\"font-weight-bold dark-grey-text\">{{book.title}}</p>\r\n            <p class=\"dark-grey-text\">Stock: {{book.stock}}</p>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Grid Column -->\r\n  </div>\r\n</section>\r\n<!--END Content Author Info-->\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Role} from '../model/Role';\r\n\r\nconst API_URL = 'http://localhost:8080/api/users/roles';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRole(): Observable<Role>{\r\n    return this.http.get<Role>(API_URL);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n\r\n  signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveUser(user): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n\r\n  public getUser(): any {\r\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\r\n  }\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthorImageUrlService} from '../../_services/author-image-url.service';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AuthorImageUrl} from '../../model/AuthorImageUrl';\r\nimport {BookImageUrlService} from '../../_services/book-image-url.service';\r\nimport {BookImageUrl} from '../../model/BookImageUrl';\r\nimport {AlertsService} from '../../_services/alerts.service';\r\nimport {ReloadPageService} from '../../_services/reload-page.service';\r\nimport swal from 'sweetalert';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n  styleUrls: ['./media.component.scss']\r\n})\r\nexport class MediaComponent implements OnInit, OnDestroy {\r\n\r\n  authorImages = [];\r\n  authorImageForm: FormGroup;\r\n  errorMessageAuthor = '';\r\n  isAuthorTitlePresent = false;\r\n\r\n  bookImages = [];\r\n  bookImageForm: FormGroup;\r\n  errorMessageBook = '';\r\n  isBookTitlePresent = false;\r\n\r\n  selectedFiles: FileList;\r\n  currentFile: File;\r\n\r\n  bookImageSubscription: any;\r\n  authorImageSubscription: any;\r\n  navigationSubscription: any;\r\n\r\n  constructor(private authorImageUrlService: AuthorImageUrlService,\r\n              private bookImageUrlService: BookImageUrlService,\r\n              private alertsService: AlertsService,\r\n              private reloadPageService: ReloadPageService,\r\n              private sanitizer: DomSanitizer,\r\n              private router: Router) {\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n        this.getAllBookImages();\r\n        this.getAllAuthorImages();\r\n      }\r\n    });\r\n  }\r\n\r\n  get authorTitle() {\r\n    return this.authorImageForm.get('title');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authorForm();\r\n    this.bookForm();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.bookImageSubscription) {\r\n      this.bookImageSubscription.unsubscribe();\r\n    }\r\n    if (this.authorImageSubscription) {\r\n      this.authorImageSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  authorForm() {\r\n    this.authorImageForm = new FormGroup({\r\n      title: new FormControl(''),\r\n      // imageUrl: new FormControl('')\r\n    });\r\n  }\r\n\r\n  getAllAuthorImages() {\r\n    this.authorImageUrlService.getAllImages().subscribe((data: any) => {\r\n        this.authorImages = data;\r\n\r\n        this.authorImages.forEach((imageAuthor: any) => {\r\n          imageAuthor.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${imageAuthor.imageUrl}`);\r\n        });\r\n\r\n      },\r\n      error => {\r\n        this.authorImages = JSON.parse(error.message).message;\r\n      }\r\n    );\r\n  }\r\n\r\n  addAuthorImage(modalDirective: ModalDirective) {\r\n    this.currentFile = this.selectedFiles.item(0);\r\n\r\n    this.authorImageSubscription = this.authorImageUrlService.createImageUrl(this.authorImageForm.value.title, this.currentFile).subscribe(response => {\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n        this.alertsService.success();\r\n        this.isAuthorTitlePresent = false;\r\n      },\r\n      err => {\r\n        this.errorMessageAuthor = err.error.message;\r\n        this.isAuthorTitlePresent = true;\r\n      });\r\n  }\r\n\r\n  deleteAuthorImageById(authorImageUrl: AuthorImageUrl) {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          this.authorImageUrlService.deleteImageById(authorImageUrl.id).subscribe(response => {\r\n              this.alertsService.warning();\r\n              this.reloadPageService.reload();\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  bookForm() {\r\n    this.bookImageForm = new FormGroup({\r\n      title: new FormControl(''),\r\n      // imageUrl: new FormControl('')\r\n    });\r\n  }\r\n\r\n  getAllBookImages() {\r\n\r\n    this.bookImageUrlService.getAllImageBook().subscribe((data: any) => {\r\n        this.bookImages = data;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n          this.bookImages[i].imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${data[i].imageUrl}`);\r\n        }\r\n      },\r\n      err =>\r\n        this.bookImages = JSON.parse(err.message).message\r\n    );\r\n  }\r\n\r\n  uploadImage(event) {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n\r\n  addBookImage(modalDirective: ModalDirective) {\r\n    this.currentFile = this.selectedFiles.item(0);\r\n\r\n    this.bookImageSubscription = this.bookImageUrlService.addBookImageUrl(this.bookImageForm.value.title, this.currentFile).subscribe(response => {\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n        this.alertsService.success();\r\n        this.isBookTitlePresent = false;\r\n      },\r\n      err => {\r\n        this.errorMessageBook = err.error.message;\r\n        this.isBookTitlePresent = true;\r\n      });\r\n  }\r\n\r\n  deleteBookImageById(bookImageUrl: BookImageUrl) {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          this.bookImageUrlService.deleteBookImageById(bookImageUrl.id).subscribe(response => {\r\n            this.alertsService.warning();\r\n            this.reloadPageService.reload();\r\n          }, error => {\r\n            console.log(error);\r\n          });\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n\r\n}\r\n","<form class=\"form-inline d-flex justify-content-center md-form form-sm\">\r\n  <button (click)=\"frameAuthor.toggle()\" color=\"default\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n          style=\"margin-bottom: 10px\" type=\"button\">Add Author Image\r\n  </button>\r\n  <button (click)=\"frameBook.toggle()\" color=\"default\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n          type=\"button\">Book\r\n    Image\r\n  </button>\r\n  <input aria-label=\"Search\" class=\"form-control form-control-sm mr-3 w-75\" placeholder=\"Search Image\"\r\n         type=\"text\">\r\n  <i aria-hidden=\"true\" class=\"fas fa-search\"></i>\r\n</form>\r\n\r\n<!--MODALS FOR Media Author-->\r\n\r\n<div #frameAuthor=\"mdbModal\" aria-hidden=\"true\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\" id=\"frameModalAuthor\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog cascading-modal modal-avatar modal-sm\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Body-->\r\n      <ng-container *ngIf=\"authorImageForm\">\r\n        <form #titleAuthor=\"ngForm\"\r\n              (ngSubmit)=\"titleAuthor.form.valid && addAuthorImage(frameAuthor)\"\r\n              [formGroup]=\"authorImageForm\">\r\n          <div class=\"modal-body mb-1\">\r\n\r\n            <div class=\"md-form ml-0 mr-0\">\r\n              <input class=\"form-control form-control-sm ml-0\" formControlName=\"title\"\r\n                     id=\"titleAuthor\"\r\n                     mdbInput mdbValidate type=\"text\">\r\n              <label class=\"ml-0\" for=\"titleAuthor\">Image title</label>\r\n              <mdb-error *ngIf=\"titleAuthor.invalid && (titleAuthor.dirty || titleAuthor.touched)\">\r\n                Title is already taken\r\n              </mdb-error>\r\n\r\n            </div>\r\n\r\n            <div class=\"md-form ml-0 mr-0\">\r\n              <input type=\"file\"\r\n                     accept=\"image/*\" (change)=\"uploadImage($event)\"\r\n                     mdbInput mdbValidate>\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"titleAuthor.submitted && isAuthorTitlePresent\" class=\"alert alert-warning\">\r\n              {{errorMessageAuthor}}\r\n            </div>\r\n\r\n            <div class=\"text-center mt-4\">\r\n              <button class=\"my-0\" color=\"default\" mdbBtn\r\n                      rounded=\"true\" size=\"sm\"\r\n                      type=\"submit\">Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </ng-container>\r\n    </div>\r\n    <!--/.Content-->\r\n  </div>\r\n</div>\r\n<!--END MODAL-->\r\n\r\n<!--MODALS FOR Book Media-->\r\n<div #frameBook=\"mdbModal\" aria-hidden=\"true\" aria-labelledby=\"myModalLabel\" class=\"modal fade top\"\r\n     id=\"frameModalBook\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog cascading-modal modal-avatar modal-sm\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Body-->\r\n      <ng-container *ngIf=\"bookImageForm\">\r\n        <form #titleBook=\"ngForm\"\r\n              (ngSubmit)=\"titleBook.form.valid && addBookImage(frameBook)\"\r\n              [formGroup]=\"bookImageForm\">\r\n          <div class=\"modal-body mb-1\">\r\n\r\n            <div class=\"md-form ml-0 mr-0\">\r\n              <input class=\"form-control form-control-sm ml-0\" formControlName=\"title\"\r\n                     id=\"titleBook\" mdbInput mdbValidate type=\"text\">\r\n              <label class=\"ml-0\" for=\"titleBook\">Image title</label>\r\n              <mdb-error *ngIf=\"titleBook.invalid && (titleBook.dirty || titleBook.touched)\">\r\n                Title is already taken\r\n              </mdb-error>\r\n            </div>\r\n\r\n            <div class=\"md-form ml-0 mr-0\">\r\n              <input type=\"file\"\r\n                     accept=\"image/*\" (change)=\"uploadImage($event)\"\r\n                     mdbInput mdbValidate>\r\n\r\n            </div>\r\n\r\n            <div *ngIf=\"titleBook.submitted && isBookTitlePresent\" class=\"alert alert-warning\">\r\n              {{errorMessageBook}}\r\n            </div>\r\n\r\n            <div class=\"text-center mt-4\">\r\n              <button class=\"my-0\" color=\"default\" mdbBtn\r\n                      rounded=\"true\" size=\"sm\"\r\n                      type=\"submit\">Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </ng-container>\r\n    </div>\r\n    <!--/.Content-->\r\n  </div>\r\n</div>\r\n<!--END MODAL-->\r\n\r\n<div class=row>\r\n  <div class=\"col\">\r\n\r\n    <!--Content Author-->\r\n    <h3 class=\"card-header info-color white-text text-uppercase text-center\">Media Authors</h3>\r\n    <div class=\"row\">\r\n      <div *ngFor=\"let author of authorImages\" class=\"col-md-4 mx-auto my-2\">\r\n\r\n        <!--Card-->\r\n        <mdb-card class=\"text-center height-card\">\r\n          <button (click)=\"deleteAuthorImageById(author)\" class=\"float-right\" size=\"sm\">\r\n            <i class=\"far fa-trash-alt text-danger\"></i>\r\n          </button>\r\n          <!--Card image-->\r\n          <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n            <mdb-card-img [src]=\"author.imageUrl\"></mdb-card-img>\r\n            <a>\r\n              <div class=\"mask rgba-white-slight\"></div>\r\n            </a>\r\n          </div>\r\n          <!--/Card image-->\r\n          <mdb-card-body>\r\n            <h4 class=\"card-title\">\r\n              <strong>{{author.title}}</strong>\r\n            </h4>\r\n          </mdb-card-body>\r\n\r\n        </mdb-card>\r\n        <!--/.Card-->\r\n      </div>\r\n    </div>\r\n    <!-- END -->\r\n\r\n  </div>\r\n  <div class=\"col\">\r\n\r\n    <!--Content Book-->\r\n    <h3 class=\"card-header info-color white-text text-uppercase text-center\">Media Books</h3>\r\n    <div class=\"row\">\r\n      <div *ngFor=\"let book of bookImages\" class=\"col-md-4 mx-auto my-2\">\r\n\r\n        <!--Card-->\r\n        <mdb-card class=\"text-center height-card\">\r\n          <button (click)=\"deleteBookImageById(book)\" class=\"float-right\" size=\"sm\">\r\n            <i class=\"far fa-trash-alt text-danger\"></i>\r\n          </button>\r\n          <!--Card image-->\r\n          <div class=\"view view-cascade overlay waves-light\" mdbWavesEffect>\r\n            <mdb-card-img [src]=\"book.imageUrl\"></mdb-card-img>\r\n            <a>\r\n              <div class=\"mask rgba-white-slight\"></div>\r\n            </a>\r\n          </div>\r\n          <!--/Card image-->\r\n          <mdb-card-body>\r\n            <h4 class=\"card-title\">\r\n              <strong>{{book.title}}</strong>\r\n            </h4>\r\n          </mdb-card-body>\r\n\r\n        </mdb-card>\r\n        <!--/.Card-->\r\n      </div>\r\n    </div>\r\n    <!-- END -->\r\n\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Router} from '@angular/router';\r\nimport {ProfileService} from '../_services/profile.service';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n  email: string;\r\n  id: number;\r\n  currentUser: any;\r\n  profileImageAvatar: any;\r\n  private roles: string[];\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private profileService: ProfileService,\r\n              private sanitizer: DomSanitizer,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.email = user.email;\r\n      this.id = user.id;\r\n    }\r\n\r\n    if (this.tokenStorageService.getToken() == null) {\r\n      this.router.navigateByUrl('/home');\r\n    }\r\n    this.getImageProfileAvatar();\r\n  }\r\n\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    this.router.navigateByUrl('/home');\r\n  }\r\n\r\n  sendToProfile(id: number) {\r\n    this.router.navigateByUrl('dashboard/profile/' + id);\r\n  }\r\n\r\n  getImageProfileAvatar() {\r\n    this.profileService.getProfileImageByUserId(this.tokenStorageService.getUser().id).subscribe((data: any) => {\r\n      this.profileImageAvatar = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${data.image}`);\r\n    }, error => {\r\n      this.profileImageAvatar = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n}\r\n","<!--Double navigation-->\r\n<header>\r\n  <!-- Sidebar navigation -->\r\n  <mdb-side-nav #sidenav [fixed]=\"true\" class=\"fixed stylish-color\">\r\n\r\n    <mdb-navbar-brand class=\"img-center\">\r\n      <!-- Logo -->\r\n\r\n      <img src=\"/assets/images/logo.png\" style=\"max-height: 120px; max-width: 120px;\">\r\n      <!--/. Logo -->\r\n    </mdb-navbar-brand>\r\n\r\n    <links>\r\n      <!-- Side navigation links -->\r\n      <li>\r\n        <ul class=\"collapsible collapsible-accordion\">\r\n          <mdb-accordion [multiple]=\"false\" aria-multiselectable=\"false\">\r\n\r\n            <mdb-accordion-item class=\"no-collase\">\r\n              <mdb-accordion-item-head mdbWavesEffect [routerLink]=\"['/dashboard']\">\r\n                <mdb-icon fas icon=\"home\"></mdb-icon>\r\n                Home\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body></mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n            <mdb-accordion-item class=\"no-collase\">\r\n              <mdb-accordion-item-head mdbWavesEffect routerLink=\"reservation\">\r\n                <mdb-icon fas icon=\"calendar-check\"></mdb-icon>\r\n                Reservations\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body></mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n            <mdb-accordion-item class=\"no-collase\">\r\n              <mdb-accordion-item-head mdbWavesEffect routerLink=\"author\">\r\n                <mdb-icon fas icon=\"address-book\"></mdb-icon>\r\n                Authors\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body></mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n            <mdb-accordion-item class=\"no-collase\">\r\n              <mdb-accordion-item-head mdbWavesEffect routerLink=\"book\">\r\n                <mdb-icon fas icon=\"book\"></mdb-icon>\r\n                Books\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body></mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n            <mdb-accordion-item class=\"no-collase\">\r\n              <mdb-accordion-item-head mdbWavesEffect routerLink=\"client\">\r\n                <mdb-icon fas icon=\"user-friends\"></mdb-icon>\r\n                Clients\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body></mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n            <mdb-accordion-item *ngIf=\"showAdminBoard\">\r\n              <mdb-accordion-item-head mdbWavesEffect>\r\n                <mdb-icon fas icon=\"cogs\"></mdb-icon>\r\n                Admin panel\r\n              </mdb-accordion-item-head>\r\n              <mdb-accordion-item-body>\r\n                <ul>\r\n                  <li>\r\n                    <a routerLink=\"user\" mdbWavesEffect class=\"menu-item\">Users</a>\r\n                  </li>\r\n                  <li>\r\n                    <a routerLink=\"media\" mdbWavesEffect class=\"menu-item\">Media</a>\r\n                  </li>\r\n                </ul>\r\n              </mdb-accordion-item-body>\r\n            </mdb-accordion-item>\r\n\r\n          </mdb-accordion>\r\n        </ul>\r\n      </li>\r\n      <!--/. Side navigation links -->\r\n    </links>\r\n\r\n  </mdb-side-nav>\r\n  <!--/. Sidebar navigation -->\r\n\r\n  <!-- Navbar -->\r\n  <mdb-navbar\r\n    SideClass=\"navbar fixed-top navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav stylish-color text-white\"\r\n    [containerInside]=\"false\">\r\n\r\n    <navlinks class=\"navbar-container\">\r\n      <!-- SideNav slide-out button -->\r\n      <div class=\"float-left\">\r\n        <a (click)=\"sidenav.show()\" class=\"button-collapse\">\r\n          <mdb-icon fas icon=\"bars\"></mdb-icon>\r\n        </a>\r\n      </div>\r\n      <!--/. SideNav slide-out button -->\r\n    </navlinks>\r\n\r\n    <navlinks>\r\n      <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect>\r\n            <mdb-icon fas icon=\"envelope\"></mdb-icon>\r\n            <span class=\"clearfix d-none d-sm-inline-block\">Support</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link waves-light\" (click)=\"logout()\" mdbWavesEffect>\r\n            <mdb-icon fas icon=\"sign-out-alt\"></mdb-icon>\r\n            <span class=\"clearfix d-none d-sm-inline-block\">Logout</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link waves-light\" routerLink=\"profile\" mdbWavesEffect\r\n          (click)=\"sendToProfile(id)\">\r\n\r\n            <img class=\"avatar\" [src]=\"profileImageAvatar\">\r\n\r\n            <span class=\"clearfix d-none d-sm-inline-block\">{{email}}</span></a>\r\n        </li>\r\n      </ul>\r\n    </navlinks>\r\n  </mdb-navbar>\r\n  <!--/. Navbar -->\r\n\r\n</header>\r\n<!--/.Double navigation-->\r\n\r\n<!--Main Layout-->\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n<!--/Main layout-->\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'Library App';\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {StatsService} from '../../_services/stats.service';\r\n\r\n@Component({\r\n  selector: 'app-stats-card',\r\n  templateUrl: './stats-card.component.html',\r\n  styleUrls: ['./stats-card.component.scss']\r\n})\r\nexport class StatsCardComponent implements OnInit {\r\n\r\n  countAuthors: number;\r\n  countUsers: number;\r\n  countBooks: number;\r\n  countReservations: number;\r\n\r\n  constructor(private statsService: StatsService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCountOfAuthors();\r\n    this.getCountOfUsers();\r\n    this.getCountOfBooks();\r\n    this.getCountOfReservations();\r\n\r\n  }\r\n\r\n  getCountOfAuthors() {\r\n    this.statsService.getAuthorsCount().subscribe((data: any) => {\r\n      this.countAuthors = data;\r\n    }, error => {\r\n      this.countAuthors = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getCountOfUsers() {\r\n    this.statsService.getUsersCount().subscribe((data: any) => {\r\n      this.countUsers = data;\r\n    }, error => {\r\n      this.countUsers = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getCountOfBooks() {\r\n    this.statsService.getBooksCount().subscribe((data: any) => {\r\n      this.countBooks = data;\r\n    }, error => {\r\n      this.countBooks = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getCountOfReservations() {\r\n    this.statsService.getReservationsCount().subscribe((data: any) => {\r\n      this.countReservations = data;\r\n    }, error => {\r\n      this.countReservations = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","\r\n\r\n<section class=\"mt-lg-5\">\r\n\r\n  <!--Grid row-->\r\n  <div class=\"row\">\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-xl-3 col-md-6 mb-r\">\r\n\r\n      <!--Card-->\r\n      <mdb-card cascade=\"true\" class=\"cascading-admin-card\">\r\n\r\n        <!--Card Data-->\r\n        <div class=\"admin-up\">\r\n          <mdb-icon far icon=\"address-book\" class=\"primary-color\"></mdb-icon>\r\n          <div class=\"data\">\r\n            <p style=\"font-size: 20px\">AUTHORS</p>\r\n            <h4><strong>{{countAuthors}}</strong></h4>\r\n          </div>\r\n        </div>\r\n        <!--/.Card Data-->\r\n\r\n        <!--Card content-->\r\n        <mdb-card-body>\r\n\r\n        </mdb-card-body>\r\n        <!--/.Card content-->\r\n\r\n      </mdb-card>\r\n      <!--/.Card-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-xl-3 col-md-6 mb-r\">\r\n\r\n      <!--Card-->\r\n      <mdb-card cascade=\"true\" class=\"cascading-admin-card\">\r\n\r\n        <!--Card Data-->\r\n        <div class=\"admin-up\">\r\n          <mdb-icon fas icon=\"users\" class=\"warning-color\"></mdb-icon>\r\n          <div class=\"data\">\r\n            <p style=\"font-size: 20px\">USERS</p>\r\n            <h4><strong>{{countUsers}}</strong></h4>\r\n          </div>\r\n        </div>\r\n        <!--/.Card Data-->\r\n\r\n        <!--Card content-->\r\n        <mdb-card-body>\r\n\r\n        </mdb-card-body>\r\n        <!--/.Card content-->\r\n\r\n      </mdb-card>\r\n      <!--/.Card-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-xl-3 col-md-6 mb-r\">\r\n\r\n      <!--Card-->\r\n      <mdb-card cascade=\"true\" class=\"cascading-admin-card\">\r\n\r\n        <!--Card Data-->\r\n        <div class=\"admin-up\">\r\n          <mdb-icon fas icon=\"book-open\" class=\"light-blue lighten-1\"></mdb-icon>\r\n          <div class=\"data\">\r\n            <p style=\"font-size: 20px\">BOOKS</p>\r\n            <h4><strong>{{countBooks}}</strong></h4>\r\n          </div>\r\n        </div>\r\n        <!--/.Card Data-->\r\n\r\n        <!--Card content-->\r\n        <mdb-card-body>\r\n\r\n        </mdb-card-body>\r\n        <!--/.Card content-->\r\n\r\n      </mdb-card>\r\n      <!--/.Card-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-xl-3 col-md-6 mb-r\">\r\n\r\n      <!--Card-->\r\n      <mdb-card cascade=\"true\" class=\"cascading-admin-card\">\r\n\r\n        <!--Card Data-->\r\n        <div class=\"admin-up\">\r\n          <mdb-icon fas icon=\"calendar-check\" class=\"red accent-2\"></mdb-icon>\r\n          <div class=\"data\">\r\n            <p style=\"font-size: 20px\">RESERVATIONS</p>\r\n            <h4><strong>{{countReservations}}</strong></h4>\r\n          </div>\r\n        </div>\r\n        <!--/.Card Data-->\r\n\r\n        <!--Card content-->\r\n        <mdb-card-body>\r\n\r\n        </mdb-card-body>\r\n        <!--/.Card content-->\r\n\r\n      </mdb-card>\r\n      <!--/.Card-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n  </div>\r\n  <!--Grid row-->\r\n\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {User} from '../model/User';\r\n\r\nconst API_URL = 'http://localhost:8080/api/users/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(API_URL);\r\n  }\r\n\r\n  editUserById(id: number, user): Observable<User>{\r\n    return this.http.put<User>(API_URL + id, {\r\n      name: user.name,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      password: user.password,\r\n      roleSet: user.roleSet\r\n    }, httpOptions);\r\n  }\r\n\r\n  getUserById(id: number){\r\n    this.http.get(API_URL + id);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<any> {\r\n    return this.http.delete(API_URL + id);\r\n  }\r\n\r\n  uploadPhoto(id: number, user){\r\n    this.http.post(API_URL + id, {\r\n      profilePhoto: user.profilePhoto\r\n    }, httpOptions);\r\n  }\r\n\r\n}\r\n","import {Component, HostListener, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {MdbTableDirective} from 'ng-uikit-pro-standard';\r\nimport {ReservationService} from '../_services/reservation.service';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\n\r\nimport {ProfileService} from '../_services/profile.service';\r\nimport {AlertsService} from '../_services/alerts.service';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {ReloadPageService} from '../_services/reload-page.service';\r\nimport {NavigationEnd, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(MdbTableDirective, {static: true}) mdbTable: MdbTableDirective;\r\n  elements: any = [];\r\n  isElements = false;\r\n  headElements = ['Book', 'Client', 'StartDate', 'EndDate', 'ReservationState'];\r\n  searchText = '';\r\n  previous: string;\r\n  reservations = [];\r\n  currentUser: any;\r\n  selectedFiles: FileList;\r\n  currentFile: File;\r\n  page = 1;\r\n  count: any;\r\n  pageSize = 8;\r\n\r\n  imageUser: any;\r\n  newImageUser: any;\r\n  isNewImageUser = false;\r\n  imageId: number;\r\n\r\n  profileImageSubscription: any;\r\n  navigationSubscription: any;\r\n\r\n  message = 'Click Update to save your profile photo !';\r\n\r\n  constructor(private reservationService: ReservationService,\r\n              private token: TokenStorageService,\r\n              private profileService: ProfileService,\r\n              private alertService: AlertsService,\r\n              private sanitizer: DomSanitizer,\r\n              private reloadPageService: ReloadPageService,\r\n              private router: Router) {\r\n    // TO PREVENT MEMORY LEAK\r\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\r\n      if (e instanceof NavigationEnd) {\r\n        this.getImageProfile();\r\n      }\r\n    });\r\n  }\r\n\r\n  @HostListener('input') oninput() {\r\n    this.searchItems();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllReservationsByUserId();\r\n\r\n    this.mdbTable.setDataSource(this.elements);\r\n    this.previous = this.mdbTable.getDataSource();\r\n\r\n    this.currentUser = this.token.getUser();\r\n\r\n  }\r\n\r\n  // PART OF MEMORY LEAK\r\n  ngOnDestroy() {\r\n    if (this.profileImageSubscription) {\r\n      this.profileImageSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  searchItems() {\r\n    const prev = this.mdbTable.getDataSource();\r\n    if (!this.searchText) {\r\n      this.mdbTable.setDataSource(this.previous);\r\n      this.elements = this.mdbTable.getDataSource();\r\n    }\r\n    if (this.searchText) {\r\n      this.elements = this.mdbTable.searchLocalDataBy(this.searchText);\r\n      this.mdbTable.setDataSource(prev);\r\n    }\r\n  }\r\n\r\n  getAllReservationsByUserId() {\r\n    const params = this.getRequestParams(this.page, this.pageSize);\r\n    this.reservationService.getReservationsByUserId(this.token.getUser().id, params).subscribe((data: any) => {\r\n\r\n      this.reservations = data.content;\r\n\r\n      this.count = data.totalElements;\r\n\r\n      this.populateTable(data.content);\r\n\r\n    }, error => {\r\n      this.reservations = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getRequestParams(page, pageSize) {\r\n    let params = {};\r\n\r\n    if (page) {\r\n      params[`page`] = page - 1;\r\n    }\r\n    if (pageSize) {\r\n      params[`size`] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  handlePageChange(event) {\r\n    if (this.elements.length > 0) {\r\n      this.elements = [];\r\n    }\r\n\r\n    this.page = event;\r\n    this.getAllReservationsByUserId();\r\n  }\r\n\r\n  populateTable(data: any) {\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data[i].bookList.length; j++) {\r\n        this.elements.push({\r\n          book: data[i].bookList[j].title,\r\n          client: data[i].client.email,\r\n          startDate: data[i].startDate,\r\n          endDate: data[i].endDate,\r\n          reservationState: data[i].reservationState.nameOfState\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  showPreviewImageProfile(event) {\r\n    this.selectedFiles = event.target.files;\r\n\r\n    // this will show the profile picture before the update button is pressed\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      this.newImageUser = reader.result as string;\r\n      this.isNewImageUser = true;\r\n    };\r\n    reader.readAsDataURL(this.selectedFiles.item(0));\r\n    // END\r\n  }\r\n\r\n  update() {\r\n\r\n    this.currentFile = this.selectedFiles.item(0);\r\n\r\n    // THIS WILL PRODUCE MEMORY LEAK IF IS NOT UNSUBSCRIBED AND DESTROYED\r\n    this.profileImageSubscription = this.profileService.updateProfileImage(this.currentFile, this.imageId).subscribe(event => {\r\n\r\n      this.reloadPageService.reload();\r\n      this.alertService.success();\r\n      this.isNewImageUser = false;\r\n\r\n    }, error => {\r\n      this.profileService = JSON.parse(error.message).message;\r\n    });\r\n    this.selectedFiles = undefined;\r\n  }\r\n\r\n  getImageProfile() {\r\n    this.profileService.getProfileImageByUserId(this.token.getUser().id).subscribe((data: any) => {\r\n      this.imageUser = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${data.image}`);\r\n      this.imageId = data.id;\r\n    }, error => {\r\n      this.imageUser = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-6 col-md-4\">\r\n      <!--Card-->\r\n      <mdb-card cascade=\"true\" narrower=\"true\">\r\n\r\n            <div class=\"box\">\r\n\r\n              <img [src]=\"newImageUser\" class=\"js--image-preview\" *ngIf=\"isNewImageUser\">\r\n              <img [src]=\"imageUser\" class=\"js--image-preview\" *ngIf=\"!isNewImageUser\">\r\n\r\n              <div class=\"upload-options\">\r\n                <label>\r\n                  <i class=\"fas fa-search-plus search-style\"></i>\r\n                  <input  class=\"image-upload\" type=\"file\" accept=\"image/*\" name=\"profilePhoto\"\r\n                          (change)=\"showPreviewImageProfile($event)\">\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <!--/Card image-->\r\n            <mdb-card-body cascade=\"true\" class=\"text-center\">\r\n\r\n              <span class=\"form-control text-danger\" *ngIf=\"isNewImageUser\">{{message}}</span>\r\n\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                    <label class=\"col-sm-8\" for=\"firstName\">First Name</label>\r\n                    <input class=\"form-control\" id=\"firstName\" type=\"text\" disabled\r\n                    [value]=\"currentUser.name\">\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                    <label class=\"col-sm-8\" for=\"lastName\">Last name</label>\r\n                    <input class=\"form-control\" id=\"lastName\" type=\"text\" disabled\r\n                    [value]=\"currentUser.lastName\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                  <div class=\"form-group\">\r\n                    <mdb-icon class=\"prefix grey-text\" fas icon=\"envelope\"></mdb-icon>\r\n                    <label class=\"col-sm-8\" for=\"type\">Email</label>\r\n                    <input class=\"form-control\" id=\"type\" type=\"text\" disabled\r\n                    [value]=\"currentUser.email\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button mdbBtn mdbWavesEffect style=\"background: brown; color: white\"\r\n                      rounded=\"true\" (click)=\"update()\">Update</button>\r\n\r\n            </mdb-card-body>\r\n            <!--/.Card content-->\r\n\r\n      </mdb-card>\r\n      <!--/.Card-->\r\n    </div>\r\n\r\n\r\n    <!--CARD TABLE WITH RESERVATIONS-->\r\n    <div class=\"col col-md-8\">\r\n      <mdb-card cascade=\"true\" narrower=\"true\">\r\n\r\n        <div class=\"view view-cascade gradient-card-header blue-gradient card-header-custom-height\">\r\n          <h2 class=\"card-header-title\">List of Reservations:</h2>\r\n        </div>\r\n\r\n        <mdb-card-body>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 mx-auto\">\r\n                  <div class=\"md-form\">\r\n                    <input\r\n                      type=\"text\"\r\n                      [(ngModel)]=\"searchText\"\r\n                      class=\"form-control\"\r\n                      id=\"search\"\r\n                      mdbInput\r\n                    />\r\n                    <label for=\"search\">Search</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <table mdbTable class=\"z-depth-1\">\r\n                <thead>\r\n                <tr>\r\n                  <th\r\n                    *ngFor=\"let head of headElements; let i = index\"\r\n                    scope=\"col\">\r\n                    {{head}}\r\n                  </th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr *ngFor=\"let el of elements | paginate: {\r\n                itemsPerPage: pageSize,\r\n                currentPage: page,\r\n                totalItems: count}; let i = index\">\r\n                  <th scope=\"row\">{{el.book}}</th>\r\n                  <td>{{el.client}}</td>\r\n                  <td>{{el.startDate}}</td>\r\n                  <td>{{el.endDate}}</td>\r\n                  <td>{{el.reservationState}}</td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n\r\n              <pagination-controls\r\n                previousLabel=\"Prev\"\r\n                nextLabel=\"Next\"\r\n                responsive=\"true\"\r\n                (pageChange)=\"handlePageChange($event)\"\r\n              >\r\n              </pagination-controls>\r\n            </div>\r\n          </div>\r\n\r\n        </mdb-card-body>\r\n      </mdb-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {ToastService} from 'ng-uikit-pro-standard';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertsService {\r\n\r\n  constructor(private toast: ToastService) {\r\n  }\r\n\r\n  success() {\r\n    const options = {timeOut: 1500};\r\n    this.toast.success('Action performed successfully', '', options);\r\n  }\r\n\r\n  warning() {\r\n    const options = {timeOut: 1500};\r\n    this.toast.warning('Delete was successful', '', options);\r\n  }\r\n\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AgmCoreModule} from '@agm/core';\r\nimport {AppComponent} from './app.component';\r\n\r\nimport {\r\n  MDBBootstrapModulesPro,\r\n  MDBSpinningPreloader,\r\n  NavbarModule,\r\n  StickyHeaderModule,\r\n  ToastModule\r\n} from 'ng-uikit-pro-standard';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {authInterceptorProviders} from './_helpers/auth.interceptor';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {NotFoundComponent} from './_errors/not-found/not-found.component';\r\nimport {UserComponent} from './user/user.component';\r\nimport {AuthorComponent} from './_core/author/author.component';\r\nimport {BookComponent} from './_core/book/book.component';\r\nimport {MediaComponent} from './_core/media/media.component';\r\nimport {AuthorDetailsComponent} from './_core/author/author-details/author-details.component';\r\nimport {StatsCardComponent} from './dashboard/stats-card/stats-card.component';\r\nimport {ClientComponent} from './_core/client/client.component';\r\nimport {ReservationComponent} from './_core/reservation/reservation.component';\r\nimport {CalendarModule, DateAdapter} from 'angular-calendar';\r\nimport {adapterFactory} from 'angular-calendar/date-adapters/date-fns';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FlatpickrModule} from 'angularx-flatpickr';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    ProfileComponent,\r\n    RegisterComponent,\r\n    DashboardComponent,\r\n    NotFoundComponent,\r\n    UserComponent,\r\n    AuthorComponent,\r\n    BookComponent,\r\n    MediaComponent,\r\n    AuthorDetailsComponent,\r\n    StatsCardComponent,\r\n    ClientComponent,\r\n    ReservationComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    StickyHeaderModule,\r\n    NavbarModule,\r\n    NgxPaginationModule,\r\n    ToastModule.forRoot(),\r\n    ToastrModule.forRoot(),\r\n    MDBBootstrapModulesPro.forRoot(),\r\n    AgmCoreModule.forRoot({\r\n      // https://developers.google.com/maps/documentation/javascript/get-api-key?hl=en#key\r\n      apiKey: 'Your_api_key'\r\n    }),\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory,\r\n    }),\r\n  ],\r\n  entryComponents: [LoginComponent, RegisterComponent],\r\n  providers: [\r\n    MDBSpinningPreloader,\r\n    authInterceptorProviders,\r\n\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nconst API_URL = 'http://localhost:8080/api/book-image/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookImageUrlService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllImageBook(): Observable<any> {\r\n    return this.http.get(API_URL);\r\n  }\r\n\r\n  addBookImageUrl(title: string, file: File): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('title', title);\r\n\r\n    const req = new HttpRequest('POST', API_URL, formData, {\r\n      reportProgress: true,\r\n      responseType: 'json'\r\n    });\r\n\r\n    return this.http.request(req);\r\n  }\r\n\r\n  deleteBookImageById(id: number): Observable<any> {\r\n    return this.http.delete(API_URL + id);\r\n  }\r\n\r\n}\r\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {BookService} from '../../_services/book.service';\r\nimport {UserService} from '../../_services/user.service';\r\nimport {ClientService} from '../../_services/client.service';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {Client} from 'src/app/model/Client';\r\nimport {TokenStorageService} from '../../_services/token-storage.service';\r\nimport {User} from '../../model/User';\r\nimport {ReservationStateService} from '../../_services/reservation-state.service';\r\nimport {ReservationService} from '../../_services/reservation.service';\r\nimport {ReloadPageService} from '../../_services/reload-page.service';\r\nimport {AlertsService} from '../../_services/alerts.service';\r\nimport {Reservation} from '../../model/Reservation';\r\n\r\n@Component({\r\n  selector: 'app-reservation',\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  templateUrl: './reservation.component.html',\r\n  styleUrls: ['./reservation.component.scss']\r\n})\r\nexport class ReservationComponent implements OnInit {\r\n  reservationForm: FormGroup;\r\n  bookForm: FormGroup;\r\n  bookTableRows: FormArray;\r\n  editReservationForm: FormGroup;\r\n\r\n  bookList = [];\r\n  selectedBook = [];\r\n  updateSelectedBook = [];\r\n  userList = [];\r\n  clientList = [];\r\n  filteredOptionsClient: Observable<Client[]>;\r\n  searchClient = new Subject();\r\n  reservationStateList = [];\r\n  reservationList = [];\r\n\r\n  stockBook: number;\r\n  currentUser: User;\r\n\r\n  isCanceled = false;\r\n  isFinalised = false;\r\n\r\n  constructor(private bookService: BookService,\r\n              private userService: UserService,\r\n              private clientService: ClientService,\r\n              private tokenService: TokenStorageService,\r\n              private formBuilder: FormBuilder,\r\n              private reservationService: ReservationService,\r\n              private alertService: AlertsService,\r\n              private reservationStateService: ReservationStateService,\r\n              private reloadPageService: ReloadPageService\r\n  ) {\r\n    this.bookForm = this.formBuilder.group({\r\n      items: [null, Validators.required],\r\n    });\r\n    this.bookTableRows = this.formBuilder.array([]);\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formReservation();\r\n    this.getAllBooks();\r\n    this.getAllClients();\r\n    this.getAllReservationState();\r\n    this.getAllUser();\r\n    this.getAllReservations();\r\n    this.currentUser = this.tokenService.getUser();\r\n    this.bookForm.addControl('bookTableRows', this.bookTableRows);\r\n\r\n  }\r\n\r\n  onAddRow() {\r\n    this.bookTableRows.push(this.createItemFormGroup());\r\n  }\r\n\r\n\r\n  onRemoveRow(rowIndex: number) {\r\n    this.bookTableRows.removeAt(rowIndex);\r\n  }\r\n\r\n  createItemFormGroup(): FormGroup {\r\n    return this.formBuilder.group({\r\n      bookList: new FormControl('')\r\n    });\r\n  }\r\n\r\n  formReservation() {\r\n    this.reservationForm = new FormGroup({\r\n      bookList: new FormControl(this.selectedBook),\r\n      user: new FormControl(''),\r\n      client: new FormControl(''),\r\n      startDate: new FormControl(''),\r\n      endDate: new FormControl(''),\r\n      reservationState: new FormControl('')\r\n    });\r\n  }\r\n\r\n  editFormReservation(reservation: Reservation, modalDirective: ModalDirective) {\r\n\r\n    this.bookTableRows.clear();\r\n    const clientSelected = this.clientList.find(i => i.id == reservation.client.id);\r\n    const reservationStateSelected = this.reservationStateList.find(i => i.id == reservation.reservationState.id);\r\n\r\n    this.editReservationForm = new FormGroup({\r\n      id: new FormControl(reservation.id),\r\n      bookList: new FormControl(this.updateSelectedBook),\r\n      client: new FormControl(reservation.client),\r\n      startDate: new FormControl(reservation.startDate),\r\n      endDate: new FormControl(reservation.endDate),\r\n      reservationState: new FormControl(reservation.reservationState)\r\n    });\r\n\r\n    for (let i = 0; i < reservation.bookList.length; i++) {\r\n      const bookSelected = this.bookList.find(j => j.id == reservation.bookList[i].id);\r\n      this.bookTableRows.controls.push(new FormGroup({\r\n        bookList: new FormControl(bookSelected)\r\n      }));\r\n    }\r\n\r\n    this.editReservationForm.get('client').setValue(clientSelected);\r\n    this.editReservationForm.get('reservationState').setValue(reservationStateSelected);\r\n\r\n    // CHECK STATE OF LIST\r\n    const created = this.reservationStateList.find(i => i.nameOfState === 'Created');\r\n    const finalised = this.reservationStateList.find(i => i.nameOfState === 'Finalised');\r\n    const canceled = this.reservationStateList.find(i => i.nameOfState === 'Canceled');\r\n\r\n    if (this.editReservationForm.value.reservationState === created) {\r\n      this.isFinalised = true;\r\n      this.isCanceled = true;\r\n    }\r\n    if (this.editReservationForm.value.reservationState === finalised) {\r\n      this.isFinalised = false;\r\n      this.isCanceled = false;\r\n    }\r\n    if (this.editReservationForm.value.reservationState === canceled) {\r\n      this.isFinalised = false;\r\n      this.isCanceled = false;\r\n    }\r\n    // END\r\n\r\n    modalDirective.toggle();\r\n  }\r\n\r\n  getAllBooks() {\r\n    this.bookService.getAllBooks().subscribe((data: any) => {\r\n      this.bookList = data;\r\n    }, error => {\r\n      this.bookList = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllUser() {\r\n    return this.userService.getUsers().subscribe((data: any) => {\r\n      this.userList = data;\r\n    }, error => {\r\n      this.userList = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllClients() {\r\n    this.clientService.getAllClients().subscribe((data: any) => {\r\n      this.clientList = data;\r\n      this.filteredOptionsClient = this.searchClient.pipe(startWith(''), map((text: string) => this.filterClient(text)));\r\n    }, error => {\r\n      this.clientList = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  getAllReservations() {\r\n    this.reservationService.getAllReservationsFromDb().subscribe((data: any) => {\r\n      this.reservationList = data;\r\n    }, error => {\r\n      this.reservationList = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  filterClient(value: string) {\r\n    const filterValue = value.toLowerCase();\r\n    return this.clientList.filter((client: any) => client.firstName.toLowerCase().includes(filterValue) ||\r\n      client.lastName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  getAllReservationState() {\r\n    this.reservationStateService.getAllStates().subscribe((data: any) => {\r\n      this.reservationStateList = data;\r\n    }, error => {\r\n      this.reservationStateList = JSON.parse(error.message).message;\r\n    });\r\n  }\r\n\r\n  addReservation(modalDirective: ModalDirective) {\r\n    for (let i = 0; i < this.bookTableRows.length; i++) {\r\n      this.selectedBook.push(this.bookForm.value.bookTableRows[i].bookList);\r\n    }\r\n    for (let j = 0; j < this.userList.length; j++) {\r\n      if (this.userList[j].email === this.currentUser.email) {\r\n        this.reservationForm.get('user').setValue(this.userList[j]);\r\n      }\r\n    }\r\n    this.reservationService.addReservation(this.reservationForm.value)\r\n      .subscribe(response => {\r\n        this.alertService.success();\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n      }, error => {\r\n        console.log(error.message);\r\n      });\r\n  }\r\n\r\n  updateReservation(modalDirective: ModalDirective) {\r\n    const index = this.reservationList.findIndex(reservation => reservation.id == this.editReservationForm.value.id);\r\n    this.reservationList[index] = this.editReservationForm.value;\r\n    const id = this.reservationList[index].id;\r\n\r\n    for (let i = 0; i < this.bookTableRows.length; i++) {\r\n      this.updateSelectedBook.push(this.bookForm.value.bookTableRows[i].bookList);\r\n    }\r\n\r\n    this.reservationService.editReservationById(id, this.reservationList[index]).subscribe(response => {\r\n      this.reloadPageService.reload();\r\n      this.alertService.success();\r\n      modalDirective.toggle();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  showReservationFrame(modalDirective: ModalDirective) {\r\n    modalDirective.toggle();\r\n    const created = this.reservationStateList.find(i => i.nameOfState === 'Created');\r\n    this.reservationForm.get('reservationState').setValue(created);\r\n    this.bookTableRows.clear();\r\n  }\r\n\r\n  cancelReservation() {\r\n    const canceled = this.reservationStateList.find(i => i.nameOfState === 'Canceled');\r\n    this.editReservationForm.get('reservationState').setValue(canceled);\r\n  }\r\n\r\n  finaliseReservation() {\r\n    const finalised = this.reservationStateList.find(i => i.nameOfState === 'Finalised');\r\n    this.editReservationForm.get('reservationState').setValue(finalised);\r\n  }\r\n\r\n  isBookDisabled(object: any) {\r\n    const created = this.reservationStateList.find(i => i.nameOfState === 'Created');\r\n    if (!created) {\r\n      return this.bookList.includes(object);\r\n    }\r\n  }\r\n\r\n  isClientDisabled(object: any) {\r\n    return this.clientList.includes(object);\r\n  }\r\n\r\n  isStateDisabled(object: any) {\r\n    return this.reservationStateList.includes(object);\r\n  }\r\n}\r\n","<!-- Navbar Reservation-->\r\n<mdb-navbar\r\n  SideClass=\"navbar fixed-top-author navbar-toggleable-md\r\n  navbar-expand-lg scrolling-navbar\r\n  double-nav grey lighten-5 navbar-dark\"\r\n  [containerInside]=\"false\">\r\n  <navlinks class=\"navbar-container\">\r\n    <mdb-icon class=\"fas-author\" fas icon=\"calendar-alt\"></mdb-icon>\r\n  </navlinks>\r\n  <navlinks class=\"navbar-container\">\r\n    <span class=\"clearfix d-none d-sm-inline-block span-reservation\">Reservations</span>\r\n  </navlinks>\r\n  <navlinks>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n      <li class=\"nav-item\">\r\n        <span class=\"table-add float-right mr-2\">\r\n        <a (click)=\"showReservationFrame(reservationFrame)\" class=\"text-success\">\r\n          <mdb-icon fas icon=\"plus\" size=\"2x\"></mdb-icon>\r\n        </a>\r\n      </span>\r\n      </li>\r\n    </ul>\r\n  </navlinks>\r\n</mdb-navbar>\r\n<!-- End Navbar -->\r\n\r\n<!--TABLE HOLDING THE INFORMATION-->\r\n<div class=\"container-fluid my-5\">\r\n  <table class=\"add-reservation table-hover z-depth-1-half\">\r\n    <thead class=\"add-reservation-thead\">\r\n    <tr class=\"text-center\">\r\n      <th rowspan=\"2\" scope=\"col\">Start Date</th>\r\n      <th rowspan=\"2\" scope=\"col\">End Date</th>\r\n      <th colspan=\"2\" scope=\"col\">Employee</th>\r\n      <th rowspan=\"2\" scope=\"col\">State</th>\r\n      <th colspan=\"3\" scope=\"col\">Client</th>\r\n      <th rowspan=\"2\" scope=\"col\">Book</th>\r\n      <th rowspan=\"2\" scope=\"col\">Processed Date</th>\r\n      <th rowspan=\"2\" scope=\"col\">Action</th>\r\n    </tr>\r\n    <tr class=\"text-center\">\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Phone number</th>\r\n    </tr>\r\n\r\n    </thead>\r\n    <tbody *ngFor=\"let reservation of reservationList\">\r\n    <tr>\r\n      <td>\r\n        {{reservation.startDate}}\r\n      </td>\r\n      <td>\r\n        {{reservation.endDate}}\r\n      </td>\r\n      <td>\r\n        {{currentUser.name}}\r\n      </td>\r\n      <td>\r\n        {{currentUser.lastName}}\r\n      </td>\r\n      <td>\r\n        {{reservation.reservationState.nameOfState}}\r\n      </td>\r\n      <td>\r\n        {{reservation.client.firstName}}\r\n      </td>\r\n      <td>\r\n        {{reservation.client.lastName}}\r\n      </td>\r\n      <td>\r\n        {{reservation.client.phoneNumber}}\r\n      </td>\r\n      <td>\r\n        <ul *ngFor=\"let book of reservation.bookList\">\r\n          <li>\r\n            {{book.title}}\r\n          </li>\r\n        </ul>\r\n\r\n      </td>\r\n      <td>\r\n        {{reservation.processedDate | date: 'medium'}}\r\n      </td>\r\n      <td>\r\n        <a (click)=\"editFormReservation(reservation, editReservationFrame)\" style=\"color: #ffbb33;\">\r\n          <mdb-icon fas icon=\"calendar-check\" size=\"lg\"></mdb-icon>\r\n          Edit</a>\r\n      </td>\r\n\r\n    </tr>\r\n    </tbody>\r\n    <tfoot>\r\n    </tfoot>\r\n  </table>\r\n</div>\r\n\r\n<!--END TABLE-->\r\n\r\n<!--MODAL TO ADD RESERVATION-->\r\n<div #reservationFrame=\"mdbModal\" aria-hidden=\"true\" aria-labelledby=\"myBasicModalLabel\" class=\"modal fade right\" mdbModal\r\n     role=\"dialog\"\r\n     tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button (click)=\"reservationFrame.hide()\" aria-label=\"Close\" class=\"close pull-right\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <h4 class=\"modal-title w-100\" id=\"myModalLabel\">Reservation</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ng-container *ngIf=\"reservationForm\">\r\n          <form (ngSubmit)=\"addReservation(reservationFrame)\" [formGroup]=\"reservationForm\">\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n              <tr>\r\n                <th>Start Date:</th>\r\n                <th>End Date:</th>\r\n                <th>Employee</th>\r\n                <th>State</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input class=\"form-control\" formControlName=\"startDate\" type=\"date\">\r\n                </td>\r\n                <td>\r\n                  <input class=\"form-control\" formControlName=\"endDate\" type=\"date\">\r\n                </td>\r\n                <td>{{currentUser.email}}</td>\r\n                <td>\r\n                  <mdb-select-2 formControlName=\"reservationState\">\r\n                    <mdb-select-option *ngFor=\"let state of reservationStateList\" [value]=\"state\">\r\n                      {{state.nameOfState}}\r\n                    </mdb-select-option>\r\n                  </mdb-select-2>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\">\r\n                <div class=\"md-form\">\r\n                  <mdb-card-text>\r\n                    Client:\r\n                  </mdb-card-text>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-7\">\r\n                <div class=\"md-form\">\r\n                  <mdb-select-2 formControlName=\"client\" placeholder=\"Select Client\">\r\n                    <mdb-select-filter (ngModelChange)=\"searchClient.next($event)\"\r\n                                       [ngModel]=\"searchClient | async\"\r\n                                       formControlName=\"client\">\r\n                    </mdb-select-filter>\r\n                    <mdb-select-option *ngFor=\"let client of filteredOptionsClient | async\"\r\n                                       [value]=\"client\">\r\n                      {{client.firstName}} {{client.lastName}}\r\n                    </mdb-select-option>\r\n                  </mdb-select-2>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3 mr-auto\">\r\n                <div class=\"md-form\">\r\n                  <button color=\"default\" mdbBtn mdbWavesEffect size=\"md\" type=\"button\">Add Client\r\n                    <mdb-icon class=\"ml-1\" fas icon=\"plus\"></mdb-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-container *ngIf=\"bookForm\">\r\n              <form [formGroup]=\"bookForm\">\r\n                <div class=\"row\">\r\n                  <table class=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>Book</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <td>\r\n                      <button (click)=\"onAddRow()\" *ngIf=\"bookForm.get('bookTableRows')\" color=\"default\"\r\n                              mdbBtn\r\n                              mdbWavesEffect size=\"md\" type=\"button\">Add Book\r\n                        <mdb-icon class=\"ml-1\" fas icon=\"plus\"></mdb-icon>\r\n                      </button>\r\n                    </td>\r\n                    <tr *ngFor=\"let row of bookTableRows.controls; let index = index;\"\r\n                        formArrayName=\"bookTableRows\">\r\n                      <td class=\"col-md-6\">\r\n                        <mdb-select-2 [formControl]=\"row.get('bookList')\" placeholder=\"Select book\">\r\n                          <!--                    <mdb-select-filter></mdb-select-filter>-->\r\n                          <mdb-select-option *ngFor=\"let book of bookList \"\r\n                                             [value]=\"book\">{{book.title}}</mdb-select-option>\r\n                        </mdb-select-2>\r\n                      </td>\r\n                      <td class=\"col-md-6\">\r\n                        <button (click)=\"onRemoveRow(index)\" color=\"danger\" mdbBtn mdbWavesEffect size=\"sm\"\r\n                                type=\"button\">\r\n                          <i class=\"far fa-trash-alt fa-lg\"></i>\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </form>\r\n            </ng-container>\r\n            <div class=\"modal-footer text-left\">\r\n              <button class=\"relative waves-light\" color=\"primary\" mdbBtn mdbWavesEffect\r\n                      type=\"submit\">Save\r\n                <i class=\"far fa-save fa-lg ml-1\"></i>\r\n              </button>\r\n              <button (click)=\"reservationFrame.hide()\" aria-label=\"Close\" class=\"relative waves-light\" color=\"light\"\r\n                      mdbBtn\r\n                      mdbWavesEffect type=\"button\">Cancel\r\n                <i class=\"fas fa-times fa-lg ml-1\"></i></button>\r\n            </div>\r\n          </form>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--END MODAL-->\r\n\r\n<!--MODAL TO EDIT RESERVATION-->\r\n<div #editReservationFrame=\"mdbModal\" aria-hidden=\"true\" aria-labelledby=\"myBasicModalLabel\" class=\"modal fade right\" mdbModal\r\n     role=\"dialog\"\r\n     tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button (click)=\"editReservationFrame.hide()\" aria-label=\"Close\" class=\"close pull-right\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n        <h4 class=\"modal-title w-100\">Reservation</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <ng-container *ngIf=\"editReservationForm\">\r\n          <form [formGroup]=\"editReservationForm\" (ngSubmit)=\"updateReservation(editReservationFrame)\">\r\n            <table class=\"table table-hover\">\r\n              <thead>\r\n              <tr>\r\n                <th>Start Date:</th>\r\n                <th>End Date:</th>\r\n                <th>Employee</th>\r\n                <th>State</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>\r\n                  <input class=\"form-control\" formControlName=\"startDate\" type=\"date\" disabled=\"isCanceled? isCanceled : isFinalised\">\r\n                </td>\r\n                <td>\r\n                  <input class=\"form-control\" formControlName=\"endDate\" type=\"date\" disabled=\"isCanceled? isCanceled : isFinalised\">\r\n                </td>\r\n                <td>{{currentUser.email}}</td>\r\n                <td>\r\n                  <mdb-select-2 formControlName=\"reservationState\">\r\n                    <mdb-select-option *ngFor=\"let state of reservationStateList\" [value]=\"state\" [disabled]=\"isStateDisabled(state)\">\r\n                      {{state.nameOfState}}\r\n                    </mdb-select-option>\r\n                  </mdb-select-2>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-2\">\r\n                <div class=\"md-form\">\r\n                  <mdb-card-text>\r\n                    Client:\r\n                  </mdb-card-text>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-7\">\r\n                <div class=\"md-form\">\r\n                  <mdb-select-2 formControlName=\"client\" placeholder=\"Select Client\">\r\n<!--                                        <mdb-select-filter [ngModel]=\"searchClient | async\" (ngModelChange)=\"searchClient.next($event)\"-->\r\n<!--                                                           formControlName=\"client\">-->\r\n<!--                                        </mdb-select-filter>-->\r\n                    <mdb-select-option *ngFor=\"let client of filteredOptionsClient | async\" [disabled]=\"isClientDisabled(client)\"\r\n                                       [value]=\"client\">\r\n                      {{client.firstName}} {{client.lastName}}\r\n                    </mdb-select-option>\r\n                  </mdb-select-2>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-3 mr-auto\">\r\n                <div class=\"md-form\">\r\n                  <button *ngIf=\"isCanceled? isCanceled : isFinalised\"\r\n                    color=\"default\" mdbBtn mdbWavesEffect size=\"md\" type=\"button\">Add Client\r\n                    <mdb-icon class=\"ml-1\" fas icon=\"plus\"></mdb-icon>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <ng-container *ngIf=\"bookForm\">\r\n              <form [formGroup]=\"bookForm\">\r\n                <div class=\"row\">\r\n                  <table class=\"table table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                      <th>Book</th>\r\n                      <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <td>\r\n                        <button (click)=\"onAddRow()\" *ngIf=\"isCanceled? isCanceled : isFinalised\"\r\n                                color=\"default\"\r\n                                mdbBtn\r\n                                mdbWavesEffect size=\"md\" type=\"button\">Add Book\r\n                          <mdb-icon class=\"ml-1\" fas icon=\"plus\"></mdb-icon>\r\n                        </button>\r\n                      </td>\r\n\r\n                      <tr formArrayName=\"bookTableRows\" *ngFor=\"let row of bookTableRows.controls;\r\n                      let index = index;\">\r\n                        <td class=\"col-md-6\" [formGroupName]=\"index\">\r\n                          <mdb-select-2 formControlName=\"bookList\" placeholder=\"Select Book\">\r\n                            <mdb-select-option *ngFor=\"let book of bookList \" [disabled]=\"isBookDisabled(book)\"\r\n                                    [value]=\"book\">{{book.title}}</mdb-select-option>\r\n                          </mdb-select-2>\r\n                        </td>\r\n                        <td class=\"col-md-6\">\r\n                          <button (click)=\"onRemoveRow(index)\" *ngIf=\"isCanceled? isCanceled : isFinalised\"\r\n                                  color=\"danger\" mdbBtn mdbWavesEffect size=\"sm\"\r\n                                  type=\"button\"><i class=\"far fa-trash-alt fa-lg\"></i>\r\n                          </button>\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              </form>\r\n            </ng-container>\r\n            <div class=\"cancel-reservation\">\r\n              <button (click)=\"cancelReservation()\" *ngIf=\"isCanceled\"\r\n                      class=\"waves-light\"\r\n                      style=\"background:\r\n              brown; color:\r\n              white\" mdbBtn mdbWavesEffect\r\n                      type=\"submit\">Cancel Reservation\r\n                <i class=\"fas fa-ban fa-lg ml-1\"></i>\r\n              </button>\r\n              <button (click)=\"finaliseReservation()\" *ngIf=\"isFinalised\" class=\"waves-light\"\r\n                      style=\"background:\r\n              darkgreen; color:\r\n              white\" mdbBtn mdbWavesEffect\r\n                      type=\"submit\">Finalise Reservation\r\n                <i class=\"fas fa-check fa-lg ml-1\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"save-reservation\">\r\n              <button *ngIf=\"isCanceled? isCanceled : isFinalised\"  class=\"relative waves-light\"\r\n                      color=\"primary\"\r\n                      mdbBtn\r\n                      mdbWavesEffect\r\n                      type=\"submit\">Save\r\n                <i class=\"far fa-save fa-lg ml-1\"></i>\r\n              </button>\r\n              <button (click)=\"editReservationFrame.hide()\" aria-label=\"Close\" class=\"relative waves-light\" color=\"light\"\r\n                      mdbBtn\r\n                      mdbWavesEffect type=\"button\">Close\r\n                <i class=\"fas fa-times fa-lg ml-1\"></i></button>\r\n            </div>\r\n          </form>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--END MODAL-->\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthorService} from '../../_services/author.service';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {AuthorImageUrlService} from '../../_services/author-image-url.service';\r\nimport {ModalDirective} from 'ng-uikit-pro-standard';\r\nimport {Author} from '../../model/Author';\r\nimport {Router} from '@angular/router';\r\nimport {AlertsService} from '../../_services/alerts.service';\r\nimport swal from 'sweetalert';\r\nimport {ReloadPageService} from '../../_services/reload-page.service';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-author',\r\n  templateUrl: './author.component.html',\r\n  styleUrls: ['./author.component.scss']\r\n})\r\nexport class AuthorComponent implements OnInit {\r\n\r\n  authors = [];\r\n  imageUrlList = [];\r\n  addAuthorForm: FormGroup;\r\n  editAuthorForm: FormGroup;\r\n  dateForm: FormGroup;\r\n  errorMessageAddAuthor = '';\r\n  isAuthorAlreadyExist = false;\r\n\r\n  constructor(private authorService: AuthorService,\r\n              private authorImageUrl: AuthorImageUrlService,\r\n              private alertsService: AlertsService,\r\n              private reloadPageService: ReloadPageService,\r\n              private sanitizer: DomSanitizer,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getAuthors();\r\n    this.getImageUrlAuthors();\r\n    this.formAuthor();\r\n\r\n    this.dateForm = new FormGroup({\r\n      dateBirth: new FormControl(''),\r\n      deathDate: new FormControl('')\r\n    });\r\n\r\n  }\r\n\r\n  getAuthors() {\r\n    this.authorService.getAllAuthors().subscribe((data: any) => {\r\n        this.authors = data;\r\n\r\n        this.authors.forEach((image: any) => {\r\n          image.authorImageUrl.imageUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`data:image/png;base64, ${image.authorImageUrl.imageUrl}`);\r\n        });\r\n\r\n      },\r\n      error => {\r\n        this.authors = JSON.parse(error.message).message;\r\n      });\r\n  }\r\n\r\n  getImageUrlAuthors() {\r\n    this.authorImageUrl.getAllImages().subscribe((data: any) => {\r\n        this.imageUrlList = data;\r\n      },\r\n      error => {\r\n        this.imageUrlList = JSON.parse(error.message).message;\r\n      });\r\n  }\r\n\r\n  formAuthor() {\r\n    this.addAuthorForm = new FormGroup({\r\n      firstName: new FormControl(''),\r\n      lastName: new FormControl(''),\r\n      dateOfBirth: new FormControl(''),\r\n      nationality: new FormControl(''),\r\n      description: new FormControl(''),\r\n      type: new FormControl(''),\r\n      authorImageUrl: new FormControl('')\r\n    });\r\n  }\r\n\r\n  editFormAuthor(author: Author, modalDirective: ModalDirective) {\r\n    const authorImageSelected = this.imageUrlList.find(i => i.id == author.authorImageUrl.id);\r\n\r\n    modalDirective.toggle();\r\n\r\n    this.editAuthorForm = new FormGroup({\r\n      id: new FormControl(author.id),\r\n      firstName: new FormControl(author.firstName),\r\n      lastName: new FormControl(author.lastName),\r\n      dateOfBirth: new FormControl(author.dateOfBirth),\r\n      nationality: new FormControl(author.nationality),\r\n      description: new FormControl(author.description),\r\n      type: new FormControl(author.type),\r\n      bookList: new FormControl(author.bookSet),\r\n      authorImageUrl: new FormControl(author.authorImageUrl)\r\n    });\r\n\r\n    this.editAuthorForm.get('authorImageUrl').setValue(authorImageSelected);\r\n\r\n  }\r\n\r\n  addAuthor(modalDirective: ModalDirective) {\r\n    // tslint:disable-next-line:max-line-length\r\n    this.addAuthorForm.controls.dateOfBirth.setValue(this.dateForm.controls.dateBirth.value + ' - ' + this.dateForm.controls.deathDate.value);\r\n\r\n    if (this.addAuthorForm.value.authorImageUrl == '') {\r\n      this.addAuthorForm.get('authorImageUrl').setValue(null);\r\n    }\r\n\r\n    this.authorService.addAuthor(this.addAuthorForm.value).subscribe(response => {\r\n        this.isAuthorAlreadyExist = false;\r\n        this.alertsService.success();\r\n        modalDirective.toggle();\r\n        this.reloadPageService.reload();\r\n      },\r\n      err => {\r\n        this.errorMessageAddAuthor = err.error.message;\r\n        this.isAuthorAlreadyExist = true;\r\n      });\r\n  }\r\n\r\n  updateAuthor(modalDirective: ModalDirective): void {\r\n    const index = this.authors.findIndex(author => author.id == this.editAuthorForm.value.id);\r\n    this.authors[index] = this.editAuthorForm.value;\r\n    const id = this.authors[index].id;\r\n\r\n    this.authorService.editAuthorById(id, this.authors[index]).subscribe(response => {\r\n      this.alertsService.success();\r\n      this.isAuthorAlreadyExist = false;\r\n      modalDirective.toggle();\r\n      this.reloadPageService.reload();\r\n    }, err => {\r\n      this.errorMessageAddAuthor = err.error.message;\r\n      this.isAuthorAlreadyExist = true;\r\n    });\r\n  }\r\n\r\n  deleteAuthor(author: Author) {\r\n\r\n    swal({\r\n      title: 'Are you sure?',\r\n      text: 'Once deleted, you will not be able to recover this registration!',\r\n      icon: 'warning',\r\n      buttons: ['Cancel', 'Ok'],\r\n      dangerMode: true,\r\n    })\r\n      .then((willDelete) => {\r\n        if (willDelete) {\r\n          this.authorService.deleteAuthorById(Number(author.id)).subscribe(response => {\r\n            this.reloadPageService.reload();\r\n          }, error => {\r\n            console.log(error);\r\n          });\r\n          swal('Your registration/file has been deleted!', {\r\n            icon: 'success',\r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  sendToAuthorInfo(author: Author) {\r\n    this.router.navigateByUrl('dashboard/author/' + author.id);\r\n  }\r\n\r\n}\r\n","<!-- Navbar Authors-->\r\n<mdb-navbar\r\n  SideClass=\"navbar fixed-top-author navbar-toggleable-md navbar-expand-lg scrolling-navbar double-nav grey lighten-5 navbar-dark\"\r\n  [containerInside]=\"false\">\r\n  <navlinks class=\"navbar-container\">\r\n    <mdb-icon class=\"fas-author\" fas icon=\"address-book\"></mdb-icon>\r\n  </navlinks>\r\n  <navlinks class=\"navbar-container\">\r\n    <span class=\"clearfix d-none d-sm-inline-block span-author\">Authors</span>\r\n  </navlinks>\r\n  <navlinks>\r\n    <ul class=\"nav navbar-nav nav-flex-icons ml-auto ie-double-nav\">\r\n      <li class=\"nav-item\">\r\n        <button (click)=\"addAuthorFrame.show()\" color=\"primary\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n                size=\"md\"\r\n                type=\"button\">Add Author\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </navlinks>\r\n</mdb-navbar>\r\n<!-- End navbar -->\r\n\r\n<!-- Modal Add new Author -->\r\n<div #addAuthorFrame=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\"\r\n     id=\"addAuthor\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <!--Header-->\r\n      <div class=\"modal-header text-center custom-header-modal\">\r\n        <img src=\"./assets/images/authorAddIcon.png\" class=\"mx-auto\">\r\n\r\n        <button (click)=\"addAuthorFrame.hide()\" aria-label=\"Close\" class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                type=\"button\">\r\n          <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <!--Body-->\r\n      <div class=\"modal-body\">\r\n\r\n        <form #addAuthorExist=\"ngForm\"\r\n              (ngSubmit)=\"addAuthorExist.form.valid && addAuthor(addAuthorFrame)\"\r\n              [formGroup]=\"addAuthorForm\">\r\n          <div class=\"row\">\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"firstName\">First Name</label>\r\n                <input class=\"form-control\" formControlName=\"firstName\" id=\"firstName\" type=\"text\">\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"lastName\">Last name</label>\r\n                <input class=\"form-control\" formControlName=\"lastName\" id=\"lastName\"\r\n                       type=\"text\">\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"col-4\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"signature\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"type\">Type</label>\r\n                <input class=\"form-control\" formControlName=\"type\" id=\"type\"\r\n                       placeholder=\"Ex: Poet, Romancer, Novelist...\" type=\"text\">\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <form [formGroup]=\"dateForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" far icon=\"far fa-calendar-alt\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"dateOfBirth\">Year of Birth</label>\r\n                  <input class=\"form-control\" formControlName=\"dateBirth\" id=\"dateOfBirth\"\r\n                         maxlength=\"4\"\r\n                         mdbInput type=\"text\">\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" far icon=\"far fa-calendar-alt\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"deathDate\">Year of Death</label>\r\n                  <input class=\"form-control\" formControlName=\"deathDate\" id=\"deathDate\"\r\n                         maxlength=\"4\" type=\"text\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-6\">\r\n              <div class=\"form-group\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"flag\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"nationality\">Nationality</label>\r\n                <input class=\"form-control\" formControlName=\"nationality\" id=\"nationality\"\r\n                       type=\"text\">\r\n              </div>\r\n            </div>\r\n            <div class=\"col-6\">\r\n              <mdb-icon class=\"prefix grey-text\" fas icon=\"universal-access\"></mdb-icon>\r\n              <label class=\"col-sm-6 col-form-label\" for=\"imageUrl\">Profile Image</label>\r\n              <select class=\"form-control\" formControlName=\"authorImageUrl\" id=\"imageUrl\">\r\n                <option disabled hidden selected value=\"\">Select image of author by name</option>\r\n                <option *ngFor=\"let image of imageUrlList\" [ngValue]=\"image\">\r\n                  {{image.title}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n\r\n            <div class=\"form-group col-12\">\r\n              <mdb-icon class=\"prefix grey-text\" far icon=\"far fa-comment-alt\"></mdb-icon>\r\n              <label class=\"col-sm-6 col-form-label\" for=\"description\">Description</label>\r\n              <textarea class=\"form-control\" formControlName=\"description\" id=\"description\"\r\n                        type=\"text\"></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"addAuthorExist.submitted && isAuthorAlreadyExist\" class=\"alert alert-warning\">\r\n            {{errorMessageAddAuthor}}\r\n          </div>\r\n\r\n          <div class=\"justify-content-center\" style=\"display: flex\">\r\n            <button mdbBtn mdbWavesEffect style=\"background: brown; color: white\"\r\n                    rounded=\"true\" type=\"submit\">Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End modal -->\r\n\r\n<!-- Edit Author Modal -->\r\n<div #frameEditAuthor=\"mdbModal\" aria-hidden=\"false\" aria-labelledby=\"myModalLabel\"\r\n     class=\"modal fade top\"\r\n     id=\"frameEditAuthor\"\r\n     mdbModal\r\n     role=\"dialog\" tabindex=\"-1\">\r\n  <div class=\"modal-dialog-scrollable\" role=\"document\">\r\n    <!--Content-->\r\n    <div class=\"modal-content\">\r\n      <ng-container *ngIf=\"editAuthorForm\">\r\n        <!--Header-->\r\n        <div class=\"modal-header text-center custom-header-modal\">\r\n          <img src=\"./assets/images/authorAddIcon.png\" class=\"mx-auto\">\r\n          <button (click)=\"frameEditAuthor.hide()\" aria-label=\"Close\" class=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  type=\"button\">\r\n            <span aria-hidden=\"true\" class=\"white-text\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <!--Body-->\r\n        <div class=\"modal-body\">\r\n\r\n          <form #editAuthorExist=\"ngForm\" (ngSubmit)=\"editAuthorExist.form.valid &&\r\n          updateAuthor(frameEditAuthor)\"\r\n                [formGroup]=\"editAuthorForm\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"firstNameEdit\">First Name</label>\r\n                  <input class=\"form-control\" formControlName=\"firstName\" id=\"firstNameEdit\"\r\n                         type=\"text\" mdbCharCounter mdbInput>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" fas icon=\"user\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"lastNameEdit\">Last name</label>\r\n                  <input class=\"form-control\" formControlName=\"lastName\" id=\"lastNameEdit\"\r\n                         type=\"text\" mdbCharCounter mdbInput>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" fas icon=\"signature\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"typeEdit\">Type</label>\r\n                  <input class=\"form-control\" formControlName=\"type\" id=\"typeEdit\"\r\n                         placeholder=\"Ex: Poet, Romancer, Novelist...\" type=\"text\" mdbCharCounter mdbInput>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" far icon=\"far fa-calendar-alt\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"dateOfBirthEdit\">Years</label>\r\n                  <input class=\"form-control\" formControlName=\"dateOfBirth\" id=\"dateOfBirthEdit\"\r\n                         maxlength=\"11\" length=\"11\"\r\n                         mdbInput type=\"text\" mdbCharCounter>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <mdb-icon class=\"prefix grey-text\" fas icon=\"flag\"></mdb-icon>\r\n                  <label class=\"col-sm-6 col-form-label\" for=\"nationalityEdit\">Nationality</label>\r\n                  <input class=\"form-control\" formControlName=\"nationality\" id=\"nationalityEdit\"\r\n                         type=\"text\" mdbCharCounter mdbInput>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-6\">\r\n                <mdb-icon class=\"prefix grey-text\" fas icon=\"universal-access\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"imageUrlEdit\">Profile Image</label>\r\n                <select class=\"form-control\" formControlName=\"authorImageUrl\" id=\"imageUrlEdit\">\r\n                  <option *ngFor=\"let image of imageUrlList\" [ngValue]=\"image\">\r\n                    {{image.title}}\r\n                  </option>\r\n\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"form-group col-12\">\r\n                <mdb-icon class=\"prefix grey-text\" far icon=\"far fa-comment-alt\"></mdb-icon>\r\n                <label class=\"col-sm-6 col-form-label\" for=\"descriptionEdit\">Description</label>\r\n                <textarea class=\"form-control\" formControlName=\"description\" id=\"descriptionEdit\"\r\n                          type=\"text\" length=\"2000\" mdbCharCounter></textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"editAuthorExist.submitted && isAuthorAlreadyExist\" class=\"alert alert-warning\">\r\n              {{errorMessageAddAuthor}}\r\n            </div>\r\n\r\n            <div class=\"justify-content-center\" style=\"display: flex\">\r\n              <button mdbBtn mdbWavesEffect style=\"background: brown; color: white\"\r\n                      rounded=\"true\" type=\"submit\">Save\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End Edit Author -->\r\n\r\n<!-- Content -->\r\n<div class=\"row my-5\">\r\n\r\n  <div *ngFor=\"let author of authors\" class=\"col-md-2-custom my-2\">\r\n      <div>\r\n        <div class=\"img-wrapper\">\r\n          <img [src]=\"author.authorImageUrl.imageUrl\">\r\n          <h2>{{author.firstName}} {{author.lastName}}</h2>\r\n          <ul>\r\n            <li>\r\n              <a (click)=\"sendToAuthorInfo(author)\" style=\"color: #2bbbad;\"><i class=\"fas fa-info-circle\"></i></a>\r\n            </li>\r\n            <li>\r\n              <a (click)=\"editFormAuthor(author,frameEditAuthor)\" style=\"color: #ffbb33;\"><i class=\"fas fa-user-edit\"></i></a>\r\n            </li>\r\n            <li>\r\n              <a (click)=\"deleteAuthor(author)\" style=\"color: #ff4444;\"><i class=\"far fa-trash-alt\"></i></a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n</div>\r\n<!-- End Content -->\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthorImageUrl} from '../model/AuthorImageUrl';\r\n\r\nconst API_URL = 'http://localhost:8080/api/author-image/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorImageUrlService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllImages(): Observable<AuthorImageUrl> {\r\n    return this.http.get<AuthorImageUrl>(API_URL);\r\n  }\r\n\r\n  createImageUrl(title: string, file: File): Observable<any> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('title', title);\r\n    formData.append('file', file);\r\n\r\n    const req = new HttpRequest('POST', API_URL, formData, {\r\n      reportProgress: true,\r\n      responseType: 'json'\r\n    });\r\n\r\n    return this.http.request(req);\r\n  }\r\n\r\n  deleteImageById(id: number): Observable<AuthorImageUrl> {\r\n    return this.http.delete<AuthorImageUrl>(API_URL + id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ReservationState} from '../model/ReservationState';\r\n\r\nconst API_URL = 'http://localhost:8080/api/state/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservationStateService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllStates(): Observable<ReservationState> {\r\n    return this.http.get<ReservationState>(API_URL);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Reservation} from '../model/Reservation';\r\n\r\nconst API_URL = 'http://localhost:8080/api/reservations/';\r\nconst API_URL_PROFILE = 'http://localhost:8080/api/reservations/profile/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReservationService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllReservationsFromDb(): Observable<Reservation> {\r\n    return this.http.get<Reservation>(API_URL);\r\n  }\r\n\r\n  getReservationById(id: number): Observable<Reservation> {\r\n    return this.http.get<Reservation>(API_URL + id);\r\n  }\r\n\r\n  getReservationsByUserId(userId: number, params) {\r\n    return this.http.get<Reservation>(API_URL_PROFILE + userId, {params});\r\n  }\r\n\r\n  addReservation(reservation: Reservation): Observable<Reservation> {\r\n    return this.http.post<Reservation>(API_URL, {\r\n      bookList: reservation.bookList,\r\n      user: reservation.user,\r\n      client: reservation.client,\r\n      startDate: reservation.startDate,\r\n      endDate: reservation.endDate,\r\n      reservationState: reservation.reservationState\r\n    }, httpOptions);\r\n  }\r\n\r\n  editReservationById(id: number, reservation: Reservation): Observable<Reservation> {\r\n    return this.http.put<Reservation>(API_URL + id, {\r\n      bookList: reservation.bookList,\r\n      user: reservation.user,\r\n      client: reservation.client,\r\n      startDate: reservation.startDate,\r\n      endDate: reservation.endDate,\r\n      reservationState: reservation.reservationState\r\n    }, httpOptions);\r\n  }\r\n\r\n  deleteReservationById(id: number): Observable<Reservation> {\r\n    return this.http.delete<Reservation>(API_URL + id);\r\n  }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Author} from '../model/Author';\r\n\r\nconst API_URL = 'http://localhost:8080/api/authors/';\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthorService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllAuthors(): Observable<Author> {\r\n    return this.http.get<Author>(API_URL);\r\n  }\r\n\r\n  addAuthor(author: Author): Observable<Author> {\r\n    return this.http.post<Author>(API_URL, {\r\n      firstName: author.firstName,\r\n      lastName: author.lastName,\r\n      dateOfBirth: author.dateOfBirth,\r\n      nationality: author.nationality,\r\n      description: author.description,\r\n      type: author.type,\r\n      authorImageUrl: author.authorImageUrl\r\n    }, httpOptions);\r\n  }\r\n\r\n  editAuthorById(id: number, author): Observable<Author> {\r\n    return this.http.put<Author>(API_URL + id, {\r\n      firstName: author.firstName,\r\n      lastName: author.lastName,\r\n      dateOfBirth: author.dateOfBirth,\r\n      nationality: author.nationality,\r\n      description: author.description,\r\n      type: author.type,\r\n      authorImageUrl: author.authorImageUrl\r\n    }, httpOptions);\r\n  }\r\n\r\n  getAuthorById(id: number) {\r\n    return this.http.get<Author>(API_URL + id);\r\n  }\r\n\r\n  deleteAuthorById(id: number): Observable<Author> {\r\n    return this.http.delete<Author>(API_URL + id);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Fictional} from '../model/Fictional';\r\nimport {Nonfictional} from '../model/Nonfictional';\r\nimport {BookCategory} from '../model/BookCategory';\r\n\r\nconst API_URL_FICTIONAL = 'http://localhost:8080/api/fictional/';\r\nconst API_URL_NONFICTIONAL = 'http://localhost:8080/api/nonfictional/';\r\nconst API_URL_BOOK_CATEGORY = 'http://localhost:8080/api/book-category/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookCategoryTypeService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllFictional(): Observable<Fictional> {\r\n    return this.http.get<Fictional>(API_URL_FICTIONAL);\r\n  }\r\n\r\n  getAllNonfictional(): Observable<Nonfictional> {\r\n    return this.http.get<Nonfictional>(API_URL_NONFICTIONAL);\r\n  }\r\n\r\n  getAllBookCategories(): Observable<BookCategory> {\r\n    return this.http.get<BookCategory>(API_URL_BOOK_CATEGORY);\r\n  }\r\n}\r\n","import {HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {Observable} from 'rxjs';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private token: TokenStorageService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        let authReq = req;\r\n        const token = this.token.getToken();\r\n        if (token != null) {\r\n\r\n            // for Spring Boot back-end\r\n            authReq = req.clone({headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)});\r\n\r\n        }\r\n        return next.handle(authReq);\r\n    }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n];\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {NotFoundComponent} from './_errors/not-found/not-found.component';\r\nimport {UserComponent} from './user/user.component';\r\nimport {AuthorComponent} from './_core/author/author.component';\r\nimport {BookComponent} from './_core/book/book.component';\r\nimport {MediaComponent} from './_core/media/media.component';\r\nimport {AuthorDetailsComponent} from './_core/author/author-details/author-details.component';\r\nimport {StatsCardComponent} from './dashboard/stats-card/stats-card.component';\r\nimport {ClientComponent} from './_core/client/client.component';\r\nimport {ReservationComponent} from './_core/reservation/reservation.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'dashboard', component: DashboardComponent,\r\n    children: [\r\n      {\r\n        path: 'user', component: UserComponent\r\n      },\r\n      {\r\n        path: 'reservation', component: ReservationComponent\r\n      },\r\n      {\r\n        path: 'author', component: AuthorComponent,\r\n      },\r\n      {\r\n        path: 'author/:id', component: AuthorDetailsComponent\r\n      },\r\n      {\r\n        path: 'profile/:id', component: ProfileComponent,\r\n        runGuardsAndResolvers: 'always'\r\n      },\r\n      {\r\n        path: 'book', component: BookComponent\r\n      },\r\n      {\r\n        path: 'media', component: MediaComponent,\r\n        runGuardsAndResolvers: 'always'\r\n      },\r\n      {\r\n        path: 'client', component: ClientComponent\r\n      },\r\n      {\r\n        path: '', component: StatsCardComponent\r\n      }\r\n    ]\r\n  },\r\n  {path: '**', component: NotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../_services/auth.service';\r\nimport {TokenStorageService} from '../_services/token-storage.service';\r\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MDBModalRef} from 'ng-uikit-pro-standard';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    form: any = {};\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n    roles: string[] = [];\r\n\r\n    validatingForm: FormGroup;\r\n\r\n    constructor(private authService: AuthService,\r\n                private tokenStorage: TokenStorageService,\r\n                public modalRef: MDBModalRef,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.tokenStorage.getToken()) {\r\n            this.isLoggedIn = true;\r\n            this.roles = this.tokenStorage.getUser().roles;\r\n\r\n        }\r\n\r\n        this.validatingForm = new FormGroup({\r\n            modalFormElegantEmail: new FormControl('', Validators.email),\r\n            modalFormElegantPassword: new FormControl('', Validators.required)\r\n        });\r\n    }\r\n\r\n    onSubmit(): void {\r\n        this.authService.login(this.form).subscribe(\r\n            data => {\r\n                this.tokenStorage.saveToken(data.token);\r\n                this.tokenStorage.saveUser(data);\r\n\r\n                this.isLoginFailed = false;\r\n                this.isLoggedIn = true;\r\n                this.roles = this.tokenStorage.getUser().roles;\r\n                this.reloadPage();\r\n            },\r\n            err => {\r\n                this.errorMessage = err.error.message;\r\n                this.isLoginFailed = true;\r\n            }\r\n        );\r\n    }\r\n\r\n    reloadPage(): void {\r\n        this.router.navigateByUrl('/dashboard').then(this.modalRef.hide);\r\n    }\r\n\r\n    get modalFormElegantEmail() {\r\n        return this.validatingForm.get('modalFormElegantEmail');\r\n    }\r\n\r\n    get modalFormElegantPassword() {\r\n        return this.validatingForm.get('modalFormElegantPassword');\r\n    }\r\n\r\n}\r\n","<!--Content-->\r\n<div class=\"modal-content form-elegant\">\r\n    <!--Header-->\r\n    <div class=\"modal-header text-center\">\r\n        <h3 class=\"modal-title w-100 dark-grey-text font-weight-bold my-3\" id=\"myModalLabel\">\r\n            <strong>Sign in</strong>\r\n        </h3>\r\n        <button (click)=\"modalRef.hide()\" aria-label=\"Close\" class=\"close\" data-dismiss=\"modal\"\r\n                type=\"button\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n    <!--Body-->\r\n    <form #f=\"ngForm\"\r\n          (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n          *ngIf=\"!isLoggedIn\"\r\n          name=\"form\"\r\n          novalidate\r\n    >\r\n        <div class=\"modal-body mx-4\">\r\n            <!--Body-->\r\n            <div class=\"md-form mb-5\">\r\n                <input [(ngModel)]=\"form.email\" [formControl]=\"modalFormElegantEmail\" class=\"form-control\"\r\n                       id=\"Form-email1\"\r\n                       mdbInput\r\n                       mdbValidate\r\n                       name=\"email\"\r\n                       type=\"email\">\r\n                <label for=\"Form-email1\">Your email</label>\r\n                <mdb-error\r\n                        *ngIf=\"modalFormElegantEmail.invalid && (modalFormElegantEmail.dirty || modalFormElegantEmail.touched)\">\r\n                    Incorrect email format !\r\n                </mdb-error>\r\n                <mdb-success\r\n                        *ngIf=\"modalFormElegantEmail.valid && (modalFormElegantEmail.dirty || modalFormElegantEmail.touched)\">Input\r\n                    valid\r\n                </mdb-success>\r\n            </div>\r\n            <div class=\"md-form pb-3\">\r\n                <input [(ngModel)]=\"form.password\" [formControl]=\"modalFormElegantPassword\" class=\"form-control\"\r\n                       id=\"Form-pass1\"\r\n                       mdbInput\r\n                       mdbValidate\r\n                       minlength=\"6\"\r\n                       name=\"password\"\r\n                       type=\"password\">\r\n                <label for=\"Form-pass1\">Your password</label>\r\n                <mdb-error\r\n                        *ngIf=\"modalFormElegantPassword.invalid && (modalFormElegantPassword.dirty || modalFormElegantPassword.touched)\">\r\n                    Minimum length must be 6 characters !\r\n                </mdb-error>\r\n\r\n                <mdb-success\r\n                        *ngIf=\"modalFormElegantPassword.valid && (modalFormElegantPassword.dirty || modalFormElegantPassword.touched)\">\r\n                    Input valid\r\n                </mdb-success>\r\n                <p class=\"font-small blue-text d-flex justify-content-end\">Forgot\r\n                    <a class=\"blue-text ml-1\" href=\"#\"> Password?</a>\r\n                </p>\r\n            </div>\r\n            <div class=\"text-center mb-3\">\r\n                <button block=\"true\" class=\"z-depth-1a waves-light\" gradient=\"blue\" mdbBtn mdbWavesEffect\r\n                        rounded=\"true\"\r\n                        type=\"submit\">Sign in\r\n                </button>\r\n            </div>\r\n\r\n            <p class=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in\r\n                with:</p>\r\n            <div class=\"row my-3 d-flex justify-content-center\">\r\n                <!--Facebook-->\r\n                <button class=\"mr-md-3 z-depth-1a waves-light\" color=\"white\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n                        type=\"button\">\r\n                    <mdb-icon class=\"text-center\" fab icon=\"facebook-f\"></mdb-icon>\r\n                </button>\r\n                <!--Twitter-->\r\n                <button class=\"mr-md-3 z-depth-1a waves-light\" color=\"white\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n                        type=\"button\">\r\n                    <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n                </button>\r\n                <!--Google +-->\r\n                <button class=\"z-depth-1a waves-light\" color=\"white\" mdbBtn mdbWavesEffect rounded=\"true\"\r\n                        type=\"button\">\r\n                    <mdb-icon fab icon=\"google-plus\"></mdb-icon>\r\n                </button>\r\n            </div>\r\n\r\n            <div *ngIf=\"f.submitted && isLoginFailed\"\r\n                    class=\"alert alert-danger\"\r\n                    role=\"alert\">\r\n                Login failed: {{ errorMessage }}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    </form>\r\n    <!--Footer-->\r\n    <div class=\"modal-footer mx-5 pt-3 mb-1\">\r\n        <p class=\"font-small grey-text d-flex justify-content-end\">Not a member?\r\n            <a class=\"blue-text ml-1\" href=\"#\"> Sign Up</a>\r\n        </p>\r\n    </div>\r\n</div>\r\n<!--/.Content-->\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nconst API_URL_AUTHOR = 'http://localhost:8080/api/count-data/author';\nconst API_URL_USER = 'http://localhost:8080/api/count-data/user';\nconst API_URL_BOOK = 'http://localhost:8080/api/count-data/book';\nconst API_URL_RESERVATION = 'http://localhost:8080/api/count-data/reservation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAuthorsCount(): Observable<any> {\n    return this.http.get(API_URL_AUTHOR);\n  }\n\n  getUsersCount(): Observable<any> {\n    return this.http.get(API_URL_USER);\n  }\n\n  getBooksCount(): Observable<any> {\n    return this.http.get(API_URL_BOOK);\n  }\n\n  getReservationsCount(): Observable<any> {\n    return this.http.get(API_URL_RESERVATION);\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}